<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="Defect">
    <typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
   <typeAlias  alias="DefectVO" type="egovframework.let.tms.defect.service.DefectVO"/>
    <typeAlias  alias="DefectDefaultVO" type="egovframework.let.tms.defect.service.DefectDefaultVO" />
   <typeAlias  alias="DefectFileVO" type="egovframework.let.tms.defect.service.DefectFileVO"/>
   
    <resultMap id="defectList" class="egovframework.let.tms.defect.service.DefectVO">
        <result property="defectIdSq" column="DEFECT_ID_SQ" columnIndex="1"/>
        <result property="defectTitle" column="DEFECT_TITLE" columnIndex="2"/>
        <result property="defectContent" column="DEFECT_CONTENT" columnIndex="3"/>
        <result property="pgId" column="PG_ID" columnIndex="4"/>
        <result property="userTestId" column="USER_TEST_ID" columnIndex="5"/>
        <result property="defectGb" column="DEFECT_GB" columnIndex="6"/>
        <result property="enrollDt" column="ENROLL_DT" columnIndex="7"/>
        <result property="actionContent" column="ACTION_CONTENT" columnIndex="8"/>
        <result property="actionSt" column="ACTION_ST" columnIndex="9"/>
        <result property="actionDt" column="ACTION_DT" columnIndex="10"/>        
        <result property="testscenarioId" column="TESTSCENARIO_ID" columnIndex="11"/>        
    </resultMap>
    
    <resultMap id="defectImg" class="java.util.HashMap" >
        <result property="FILE_IMG" column="FILE_IMG" jdbcType="BLOB" javaType="[B"/>
        <result property="FILE_NM" column="FILE_NM" />
    </resultMap>
    
    <resultMap id="Map3" class="java.util.HashMap">
       <result property="TESK_NM" column="TESK_NM" columnIndex="1"/>
       <result property="TASK_GB" column="TASK_GB" columnIndex="2"/>
       <result property="ACTIONST" column="ACTIONST" columnIndex="3"/>
       <result property="ACTIONNM" column="ACTIONNM" columnIndex="4"/>
       <result property="DEFECTGBD1" column="DEFECTGBD1" columnIndex="5"/>
       <result property="DEFECTGBD2" column="DEFECTGBD2" columnIndex="6"/>
       <result property="DEFECTGBD3" column="DEFECTGBD3" columnIndex="7"/>
       <result property="DEFECTGBD4" column="DEFECTGBD4" columnIndex="8"/>         
   </resultMap>
    
    
    <select id="defectDAO.selectTable" resultMap="Map3">
        
        <![CDATA[
         SELECT (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE=B.TASK_GB) AS TASKNM, 
                    B.TASK_GB AS TASKGB, 
                    A.CODE AS ACTIONST, 
                    A.CODE_NM AS ACTIONNM,
                    IFNULL(B.DEFECTGBD1,0) AS DEFECTGBD1, 
                    IFNULL(B.DEFECTGBD2,0) AS DEFECTGBD2, 
                    IFNULL(B.DEFECTGBD3,0) AS DEFECTGBD3, 
                    IFNULL(B.DEFECTGBD4,0) AS DEFECTGBD4
         FROM LETTCCMMNDETAILCODE AS A LEFT JOIN (SELECT D.PG_ID, 
                                                P.TASK_GB, 
                                                D.ACTION_ST,
                                                  COUNT(CASE WHEN DEFECT_GB='D1' THEN 1 END) AS DEFECTGBD1,
                                                COUNT(CASE WHEN DEFECT_GB='D2' THEN 1 END) AS DEFECTGBD2,
                                                COUNT(CASE WHEN DEFECT_GB='D3' THEN 1 END) AS DEFECTGBD3,
                                                   COUNT(CASE WHEN DEFECT_GB='D4' THEN 1 END) AS DEFECTGBD4
                                        FROM DEFECT_TB AS D, PG_TB AS P
                                        WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y'
                                        GROUP BY ACTION_ST, TASK_GB   
                                        ORDER BY TASK_GB, ACTION_ST
                                        ) AS B ON A.CODE=B.ACTION_ST
         WHERE A.CODE_ID='ACTST'
         ORDER BY TASK_GB,ACTION_ST;
        ]]>  
      
         
    </select>
    
    <select id="defectDAO.selectTableTotCnt" parameterClass="DefectDefaultVO" resultClass="java.lang.Integer">
        <![CDATA[
           SELECT COUNT(*)
         FROM LETTCCMMNDETAILCODE AS A LEFT JOIN (SELECT D.PG_ID, 
                                                P.TASK_GB, 
                                                D.ACTION_ST,
                                                  COUNT(CASE WHEN DEFECT_GB='D1' THEN 1 END) AS DEFECTGBD1,
                                                COUNT(CASE WHEN DEFECT_GB='D2' THEN 1 END) AS DEFECTGBD2,
                                                COUNT(CASE WHEN DEFECT_GB='D3' THEN 1 END) AS DEFECTGBD3,
                                                   COUNT(CASE WHEN DEFECT_GB='D4' THEN 1 END) AS DEFECTGBD4
                                        FROM DEFECT_TB AS D, PG_TB AS P
                                        WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y'
                                        GROUP BY ACTION_ST, TASK_GB   
                                        ORDER BY TASK_GB, ACTION_ST
                                        ) AS B ON A.CODE=B.ACTION_ST
         WHERE A.CODE_ID='ACTST'
         ORDER BY TASK_GB,ACTION_ST;
        ]]>    
      
        
    </select>
    
    
    <!--  
    <select id="defectDAO.selectDefect" parameterClass="DefectDefaultVO" resultMap="defectList">
    -->
    <select id="defectDAO.selectDefect" parameterClass="DefectDefaultVO" resultClass="egovMap">
        
        <![CDATA[
           SELECT * FROM (
              SELECT
                 D.DEFECT_ID_SQ,
                 (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = P.TASK_GB) AS TASK_GB,
                 D.PG_ID,
                 P.PG_NM,
                 D.DEFECT_TITLE,
                 (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.DEFECT_GB) AS DEFECT_GB,
                 (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE D.USER_TEST_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_TEST_ID,
                 D.ENROLL_DT,
                (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.ACTION_ST) AS ACTION_ST,
                (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE P.USER_DEV_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_DEV_ID
              FROM DEFECT_TB AS D, PG_TB AS P
              WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y'
              ORDER BY D.DEFECT_ID_SQ
           ) as C
           WHERE 1=1
        ]]> 
        
        <isNotEqual property="uniqId" compareValue="USRCNFRM_00000000000">
         		     <isNotEqual property="uniqId" compareValue="USRCNFRM_00000000001">
           		   	AND (USER_DEV_ID = #sessionId# OR USER_TEST_ID = #sessionId#)
           		   	 </isNotEqual>
		</isNotEqual>
      
      <isNotEmpty property="searchByPgId" >
                AND PG_ID LIKE CONCAT('%' , #searchByPgId#, '%')
        </isNotEmpty>        
        <isNotEqual property="uniqId" compareValue="USRCNFRM_00000000002">
      		<isNotEmpty property="searchByUserTestId" >
         	       AND USER_TEST_ID LIKE CONCAT('%' , #searchByUserTestId#, '%')
      	  </isNotEmpty>    
       	 <isNotEmpty property="searchByUserDevId" >
        	        AND USER_DEV_ID LIKE CONCAT('%' , #searchByUserDevId#, '%')
        	</isNotEmpty>
        </isNotEqual>
        <isNotEmpty property="searchByTaskGb" >
                AND TASK_GB LIKE CONCAT('%' , #searchByTaskGb#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByDefectGb" >
                AND DEFECT_GB LIKE CONCAT('%' , #searchByDefectGb#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByActionSt" >
                AND ACTION_ST LIKE CONCAT('%' , #searchByActionSt#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByStartDt" >
            <isNotEmpty property="searchByEndDt">
                AND ENROLL_DT BETWEEN DATE(#searchByStartDt#) AND DATE(#searchByEndDt#)
            </isNotEmpty>
        </isNotEmpty>
           LIMIT 
            #recordCountPerPage# OFFSET #firstIndex#
         
    </select>
    <select id="defectDAO.selectDefectCurrent" parameterClass="DefectDefaultVO" resultClass="egovMap">
        
        <![CDATA[
           SELECT * FROM (
              SELECT
                 D.DEFECT_ID_SQ,
                 (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = P.TASK_GB) AS TASK_GB,
                 D.PG_ID,
                 P.PG_NM,
                 D.DEFECT_TITLE,
                 (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.DEFECT_GB) AS DEFECT_GB,
                 (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE D.USER_TEST_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_TEST_ID,
                 D.ENROLL_DT,
                (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.ACTION_ST) AS ACTION_ST,
                (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE P.USER_DEV_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_DEV_ID
              FROM DEFECT_TB AS D, PG_TB AS P
              WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y'
              ORDER BY D.DEFECT_ID_SQ
           ) as C
           WHERE 1=1
        ]]> 
        
      <isNotEmpty property="searchByPgId" >
                AND PG_ID LIKE CONCAT('%' , #searchByPgId#, '%')
        </isNotEmpty>        
      <isNotEmpty property="searchByUserTestId" >
                AND USER_TEST_ID LIKE CONCAT('%' , #searchByUserTestId#, '%')
        </isNotEmpty>    
        <isNotEmpty property="searchByUserDevId" >
                AND USER_DEV_ID LIKE CONCAT('%' , #searchByUserDevId#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByTaskGb" >
                AND TASK_GB LIKE CONCAT('%' , #searchByTaskGb#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByDefectGb" >
                AND DEFECT_GB LIKE CONCAT('%' , #searchByDefectGb#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByActionSt" >
                AND ACTION_ST LIKE CONCAT('%' , #searchByActionSt#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByStartDt" >
            <isNotEmpty property="searchByEndDt">
                AND ENROLL_DT BETWEEN DATE(#searchByStartDt#) AND DATE(#searchByEndDt#)
            </isNotEmpty>
        </isNotEmpty>
           LIMIT 
            #recordCountPerPage# OFFSET #firstIndex#
         
    </select>
    
    <select id="defectDAO.selectDefectTotCnt" parameterClass="DefectDefaultVO" resultClass="java.lang.Integer">
        <![CDATA[
           SELECT COUNT(*) FROM (
              SELECT
                 D.DEFECT_ID_SQ,
                 (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = P.TASK_GB) AS TASK_GB,
                 D.PG_ID,
                 P.PG_NM,
                 D.DEFECT_TITLE,
                 (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.DEFECT_GB) AS DEFECT_GB,
                 (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE D.USER_TEST_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_TEST_ID,
                 D.ENROLL_DT,
                (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.ACTION_ST) AS ACTION_ST,
                (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE P.USER_DEV_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_DEV_ID
                  FROM DEFECT_TB AS D, PG_TB AS P
              WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y'
              ORDER BY D.DEFECT_ID_SQ
           ) as C
           WHERE 1=1
        ]]>    
        
        <isNotEqual property="uniqId" compareValue="USRCNFRM_00000000000">
			<isNull property="searchByUserTestId">
         		 <isNull property="searchByUserDevId">
         		     <isNotEqual property="uniqId" compareValue="USRCNFRM_00000000001">
           		   	AND USER_DEV_ID = #sessionId# OR USER_TEST_ID = #sessionId#
           		   	 </isNotEqual>
         		 </isNull>
			</isNull>
		</isNotEqual>
		
      <isNotEmpty property="searchByPgId" >
                AND PG_ID LIKE CONCAT('%' , #searchByPgId#, '%')
        </isNotEmpty>        
      <isNotEmpty property="searchByUserTestId" >
                AND USER_TEST_ID LIKE CONCAT('%' , #searchByUserTestId#, '%')
        </isNotEmpty>    
        <isNotEmpty property="searchByUserDevId" >
                AND USER_DEV_ID LIKE CONCAT('%' , #searchByUserDevId#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByTaskGb" >
                AND TASK_GB LIKE CONCAT('%' , #searchByTaskGb#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByDefectGb" >
                AND DEFECT_GB LIKE CONCAT('%' , #searchByDefectGb#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByActionSt" >
                AND ACTION_ST LIKE CONCAT('%' , #searchByActionSt#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByStartDt" >
            <isNotEmpty property="searchByEndDt">
                AND ENROLL_DT BETWEEN DATE(#searchByStartDt#) AND DATE(#searchByEndDt#)
            </isNotEmpty>
        </isNotEmpty>
        
    </select>
    <select id="defectDAO.selectDefectCurrentTotCnt" parameterClass="DefectDefaultVO" resultClass="java.lang.Integer">
        <![CDATA[
           SELECT COUNT(*) FROM (
              SELECT
                 D.DEFECT_ID_SQ,
                 (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = P.TASK_GB) AS TASK_GB,
                 D.PG_ID,
                 P.PG_NM,
                 D.DEFECT_TITLE,
                 (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.DEFECT_GB) AS DEFECT_GB,
                 (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE D.USER_TEST_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_TEST_ID,
                 D.ENROLL_DT,
                (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.ACTION_ST) AS ACTION_ST,
                (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE P.USER_DEV_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_DEV_ID
                  FROM DEFECT_TB AS D, PG_TB AS P
              WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y'
              ORDER BY D.DEFECT_ID_SQ
           ) as C
           WHERE 1=1
        ]]>    
        
      <isNotEmpty property="searchByPgId" >
                AND PG_ID LIKE CONCAT('%' , #searchByPgId#, '%')
        </isNotEmpty>        
      <isNotEmpty property="searchByUserTestId" >
                AND USER_TEST_ID LIKE CONCAT('%' , #searchByUserTestId#, '%')
        </isNotEmpty>    
        <isNotEmpty property="searchByUserDevId" >
                AND USER_DEV_ID LIKE CONCAT('%' , #searchByUserDevId#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByTaskGb" >
                AND TASK_GB LIKE CONCAT('%' , #searchByTaskGb#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByDefectGb" >
                AND DEFECT_GB LIKE CONCAT('%' , #searchByDefectGb#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByActionSt" >
                AND ACTION_ST LIKE CONCAT('%' , #searchByActionSt#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByStartDt" >
            <isNotEmpty property="searchByEndDt">
                AND ENROLL_DT BETWEEN DATE(#searchByStartDt#) AND DATE(#searchByEndDt#)
            </isNotEmpty>
        </isNotEmpty>
        
    </select>
    
    <select id="defectDAO.selectOneDefect" parameterClass="DefectVO" resultClass="egovMap">
        <![CDATA[
        SELECT * FROM (
           SELECT 
              D.DEFECT_ID_SQ,
              D.DEFECT_TITLE,
              D.DEFECT_CONTENT,
              D.PG_ID,
              (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE D.USER_TEST_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_TEST_ID,
              (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.DEFECT_GB) AS DEFECT_GB,
              D.ENROLL_DT,
              D.ACTION_CONTENT,
              (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.ACTION_ST) AS ACTION_ST,
              D.ACTION_DT,
              D.TESTSCENARIO_ID,
              (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE P.USER_DEV_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_DEV_ID,
              P.PG_NM,
              P.SYS_GB,
              (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = P.TASK_GB) AS TASK_GB,
              P.USE_YN,
              P.PJT_ID,
              CURDATE() AS curDate
           FROM DEFECT_TB AS D, PG_TB AS P
           WHERE D.PG_ID = P.PG_ID AND D.DEFECT_ID_SQ = #defectIdSq# AND P.PG_ID = #pgId#
           ) as C
           WHERE 1=1
        ]]>        
    </select>
    
    <select id="defectDAO.selectDefectIdSq" resultClass="java.lang.Integer">
        <![CDATA[
           SELECT COUNT(*) totcnt FROM(
              SELECT DEFECT_ID_SQ
              FROM DEFECT_TB
              ORDER BY DEFECT_ID_SQ DESC)
           AS c
           WHERE 1=1
        ]]>
    </select>
    
    <select id="defectDAO.selectDefectGb" resultClass="egovMap">
        <![CDATA[
         SELECT CODE_NM, CODE FROM LETTCCMMNDETAILCODE WHERE CODE_ID = 'DEFGB'
        ]]>
    </select>
    
    <select id="defectDAO.selectActionSt" resultClass="egovMap">
        <![CDATA[
         SELECT CODE_NM, CODE FROM LETTCCMMNDETAILCODE WHERE CODE_ID = 'ACTST'        
        ]]>
    </select>
    
    <select id="defectDAO.selectTaskGb" resultClass="egovMap">
        <![CDATA[
         SELECT CODE_NM, CODE FROM LETTCCMMNDETAILCODE WHERE CODE_ID = 'TASKGB'   
        ]]>
    </select>
    
    <select id="defectDAO.selectUser" resultClass="egovMap">
        <![CDATA[
           SELECT USER_NM, EMPLYR_ID FROM LETTNEMPLYRINFO
        ]]>
    </select>
    
    <select id="defectDAO.selectUserNm" parameterClass="java.lang.String" resultClass="java.lang.String">
        <![CDATA[
        	SELECT EMPLYR_ID
        	FROM LETTNEMPLYRINFO
        	WHERE USER_NM = #userTestId#
        ]]>
    </select>
    
    <select id="defectDAO.selectActionComplete" parameterClass="DefectDefaultVO" resultClass="java.lang.Integer">
         <![CDATA[
           SELECT COUNT(*) FROM (
               SELECT
                 D.DEFECT_ID_SQ,
                 (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = P.TASK_GB) AS TASK_GB,
                 D.PG_ID,
                 P.PG_NM,
                 D.DEFECT_TITLE,
                 (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.DEFECT_GB) AS DEFECT_GB,
                 (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE D.USER_TEST_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_TEST_ID,
                 D.ENROLL_DT,
                (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = D.ACTION_ST) AS ACTION_ST,
                (SELECT LETTNEMPLYRINFO.USER_NM FROM LETTNEMPLYRINFO WHERE P.USER_DEV_ID = LETTNEMPLYRINFO.EMPLYR_ID) AS USER_DEV_ID
                  FROM DEFECT_TB AS D, PG_TB AS P
              WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND D.ACTION_ST='A3'
              ORDER BY D.DEFECT_ID_SQ
           ) as C
           WHERE 1=1
        ]]>    
      <isNotEmpty property="searchByPgId" >
                AND PG_ID LIKE CONCAT('%' , #searchByPgId#, '%')
        </isNotEmpty>        
      <isNotEmpty property="searchByUserTestId" >
                AND USER_TEST_ID LIKE CONCAT('%' , #searchByUserTestId#, '%')
        </isNotEmpty>    
        <isNotEmpty property="searchByUserDevId" >
                AND USER_DEV_ID LIKE CONCAT('%' , #searchByUserDevId#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByTaskGb" >
                AND TASK_GB LIKE CONCAT('%' , #searchByTaskGb#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByDefectGb" >
                AND DEFECT_GB LIKE CONCAT('%' , #searchByDefectGb#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByActionSt" >
                AND ACTION_ST LIKE CONCAT('%' , #searchByActionSt#, '%')
        </isNotEmpty>
        <isNotEmpty property="searchByStartDt" >
            <isNotEmpty property="searchByEndDt">
                AND ENROLL_DT BETWEEN DATE(#searchByStartDt#) AND DATE(#searchByEndDt#)
            </isNotEmpty>
        </isNotEmpty>
    </select>
    
    <select id="defectDAO.selectDefectImg" parameterClass="java.lang.String" resultClass="java.util.HashMap">
           <![CDATA[
              SELECT FILE_IMG, FILE_NM
              FROM FILE_TB
              WHERE DEFECT_ID_SQ = #defectIdSq#
           ]]>
    </select>
    
    <select id="defectDAO.downloadDefectImg" parameterClass="java.lang.String" resultMap="defectImg">
      <![CDATA[
         SELECT FILE_IMG, FILE_NM
         FROM FILE_TB
         WHERE DEFECT_ID_SQ = #defectIdSq#
      ]]>        
    </select>
    
    <select id="defectDAO.selectDefectImgOne" parameterClass="java.lang.Integer" resultClass="DefectFileVO">
        <![CDATA[
           SELECT FILE_ID_SQ AS fileIdSq, DEFECT_ID_SQ AS defectIdSq, FILE_NM AS fileNm, 
              FILE_SIZE AS fileSize, FILE_ENROLL_DT AS fileEnrollDt
           FROM FILE_TB
           WHERE DEFECT_ID_SQ = #defectIdSq#
        ]]>
    </select>
    
    <select id="defectDAO.selectDefectIdSqToFileTb" parameterClass="java.lang.Integer" resultClass="java.lang.Integer">
        <![CDATA[
        SELECT COUNT(*) FROM (
           SELECT FILE_ID_SQ
           FROM FILE_TB
           WHERE DEFECT_ID_SQ = #defectIdSq#
        ) AS c
        WHERE 1=1        
        ]]>
    </select>
    
    <select id="defectDAO.selectDefectStats" resultClass="java.util.HashMap">
        <![CDATA[
        SELECT
         (SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE D.PG_ID=P.PG_ID AND P.USE_YN ='Y') AS actionStAll,
         (SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE D.PG_ID=P.PG_ID AND P.USE_YN ='Y' AND ACTION_ST = 'A1') AS actionStA1,
         (SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE D.PG_ID=P.PG_ID AND P.USE_YN ='Y' AND ACTION_ST = 'A2') AS actionStA2,
         (SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE D.PG_ID=P.PG_ID AND P.USE_YN ='Y' AND ACTION_ST = 'A3') AS actionStA3,
         (SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE D.PG_ID=P.PG_ID AND P.USE_YN ='Y' AND ACTION_ST = 'A4') AS actionStA4
        ]]>
    </select>
    
    <select id="defectDAO.selectUserId" resultClass="egovMap">
        <![CDATA[
           SELECT DISTINCT P.USER_DEV_ID
         FROM DEFECT_TB AS D, PG_TB AS P
         WHERE P.PG_ID = D.PG_ID
        ]]>
    </select>
    
    <select id="defectDAO.selectPjtMember" resultClass="egovMap">
        <![CDATA[
          SELECT A.EMPLYR_ID AS emplyrId, A.ESNTL_ID AS esntlId,A.USER_NM as userNm,
            IFNULL(B.actionStA1,0) AS actionStA1, IFNULL(B.actionStA2,0) AS actionStA2, IFNULL(B.actionStA3,0) AS actionStA3, IFNULL(B.actionStA4,0) AS actionStA4
         FROM LETTNEMPLYRINFO AS A LEFT JOIN
            (SELECT 
               U.EMPLYR_ID,
               COUNT(CASE WHEN ACTION_ST='A1' THEN 1 END) AS actionStA1,
               COUNT(CASE WHEN ACTION_ST='A2' THEN 1 END) AS actionStA2,
               COUNT(CASE WHEN ACTION_ST='A3' THEN 1 END) AS actionStA3,
               COUNT(CASE WHEN ACTION_ST='A4' THEN 1 END) AS actionStA4
            FROM LETTNEMPLYRINFO AS U, PG_TB AS P, DEFECT_TB AS D
            WHERE U.EMPLYR_ID = P.USER_DEV_ID AND P.USE_YN = 'Y' AND D.PG_ID = P.PG_ID
            GROUP BY U.EMPLYR_ID)
         AS B
         ON A.EMPLYR_ID = B.EMPLYR_ID
         ORDER BY esntlId
         ]]>
    </select>
    
    <select id="defectDAO.selectTaskByActionProgression" resultClass="egovMap">
        <![CDATA[
		SELECT CODE AS taskGb, CODE_NM AS taskNm, IFNULL(B.TASK_TOT_CNT,0) AS taskTotCnt, IFNULL(B.TASK_A3_CNT,0) AS taskA3Cnt
		FROM LETTCCMMNDETAILCODE AS A INNER JOIN 
			(SELECT (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE=TASK_GB) AS TASK_NM,	TASK_GB,
	 		COUNT(TASK_GB) AS TASK_TOT_CNT, COUNT(CASE WHEN ACTION_ST='A3' THEN 1 END) AS TASK_A3_CNT
			FROM PG_TB AS P, DEFECT_TB AS D
			WHERE P.PG_ID = D.PG_ID AND P.USE_YN = 'Y'
			GROUP BY TASK_GB
			) AS B ON B.TASK_GB = A.CODE
		WHERE A.CODE_ID = 'TASKGB'
		ORDER BY taskTotCnt DESC, taskA3Cnt DESC
        ]]>
    </select>
    
    <select id="defectDAO.selectTaskByDefectGbCnt" resultClass="egovMap">
        <![CDATA[
         SELECT A.CODE AS taskGb, A.CODE_NM AS taskNm, IFNULL(DEFECTALL,0) AS defectGbAll,IFNULL(D1CNT,0) AS defectGbD1, IFNULL(D2CNT,0) AS defectGbD2, IFNULL(D3CNT,0) AS defectGbD3, IFNULL(D4CNT,0) AS defectGbD4
      FROM LETTCCMMNDETAILCODE AS A INNER JOIN
         (SELECT P.TASK_GB, COUNT(*) AS DEFECTALL,
			COUNT(CASE WHEN DEFECT_GB='D1' THEN 1 END) AS D1CNT, 
          COUNT(CASE WHEN DEFECT_GB='D2' THEN 1 END) AS D2CNT, 
          COUNT(CASE WHEN DEFECT_GB='D3' THEN 1 END) AS D3CNT, 
          COUNT(CASE WHEN DEFECT_GB='D4' THEN 1 END) AS D4CNT
         FROM PG_TB AS P, DEFECT_TB AS D
         WHERE P.PG_ID = D.PG_ID AND P.USE_YN = 'Y'
         GROUP BY P.TASK_GB
      ) AS B ON A.CODE = B.TASK_GB
      WHERE A.CODE_ID='TASKGB'
      ORDER BY defectGbAll DESC, taskGb ASC

        ]]>
    </select>
    
    <select id="defectDAO.selectTaskByActionStCnt" resultClass="egovMap">
        <![CDATA[
        	SELECT A.CODE AS taskGb, A.CODE_NM AS taskNm, 
				IFNULL(B.ACTIONSTALL,0) AS actionStAll, IFNULL(B.ACTIONSTA1,0) AS actionStA1, IFNULL(B.ACTIONSTA2,0) AS actionStA2, IFNULL(B.ACTIONSTA3,0) AS actionStA3, IFNULL(B.ACTIONSTA4,0) AS actionStA4
			FROM LETTCCMMNDETAILCODE AS A INNER JOIN
				(SELECT TASK_GB,
					COUNT(*) AS ACTIONSTALL,
					COUNT(CASE WHEN ACTION_ST='A1' THEN 1 END) AS ACTIONSTA1,
					COUNT(CASE WHEN ACTION_ST='A2' THEN 1 END) AS ACTIONSTA2,
					COUNT(CASE WHEN ACTION_ST='A3' THEN 1 END) AS ACTIONSTA3,
					COUNT(CASE WHEN ACTION_ST='A4' THEN 1 END) AS ACTIONSTA4
				FROM PG_TB AS P, DEFECT_TB AS D
				WHERE P.PG_ID = D.PG_ID AND P.USE_YN = 'Y'
				GROUP BY TASK_GB)
			AS B ON A.CODE = B.TASK_GB
			WHERE A.CODE_ID='TASKGB'
			ORDER BY actionStAll DESC, actionStA3 DESC
        ]]>
    </select>
    
    <select id="defectDAO.selectDayByDefectCnt" resultClass="egovMap">
        <![CDATA[
         SELECT CAST(A.DAYS AS CHAR) AS days , IFNULL(B.ENROLL_DT_CNT,0) AS enrollDtCnt, IFNULL(C.ACTION_A3_CNT,0) AS actionDtCnt
         FROM (SELECT DATE_SUB(CURDATE(), INTERVAL N.NO DAY) AS DAYS
            FROM NUMBERS AS N
            WHERE N.NO<7
         ) AS A LEFT JOIN (SELECT ENROLL_DT, COUNT(*) AS ENROLL_DT_CNT
            FROM DEFECT_TB, PG_TB
            WHERE DEFECT_TB.PG_ID = PG_TB.PG_ID AND PG_TB.USE_YN = 'Y'
            GROUP BY ENROLL_DT 
         ) AS B ON A.DAYS = B.ENROLL_DT
         LEFT JOIN (SELECT ACTION_DT, COUNT(*) AS ACTION_A3_CNT
            FROM DEFECT_TB, PG_TB
            WHERE DEFECT_TB.PG_ID = PG_TB.PG_ID AND PG_TB.USE_YN = 'Y' AND ACTION_ST='A3'
            GROUP BY ACTION_DT 
         ) AS C ON A.DAYS = C.ACTION_DT
         ORDER BY days ASC
        ]]>
    </select>
    
    
    <select id="defectDAO.selectTaskGbByDefect" resultClass="java.lang.String">
        <![CDATA[
        SELECT P.TASK_GB AS taskGb
			FROM DEFECT_TB AS D, PG_TB AS P
			WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
			GROUP BY P.TASK_GB
        ]]>
    </select>
    	
    <select id="defectDAO.selectTaskByStats" parameterClass="java.lang.String" resultClass="java.util.HashMap" remapResults="true">
        <![CDATA[
        	SELECT (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = #taskGbList#) AS taskNm, IFNULL(B.TASK_GB,#taskGbList#) AS taskGb,A.CODE AS actionSt, A.CODE_NM AS actionNm, IFNULL(B.DEFECTGBD1,0) AS defectGbD1, IFNULL(B.DEFECTGBD2,0) AS defectGbD2, IFNULL(B.DEFECTGBD3,0) AS defectGbD3, IFNULL(B.DEFECTGBD4,0) AS defectGbD4, IFNULL((B.DEFECTGBD1+B.DEFECTGBD2+B.DEFECTGBD3+B.DEFECTGBD4),0) AS rowSum,
        		IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D1'AND P.TASK_GB=#taskGbList#),0) AS d1Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D2'AND P.TASK_GB=#taskGbList#),0) AS d2Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D3'AND P.TASK_GB=#taskGbList#),0) AS d3Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D4'AND P.TASK_GB=#taskGbList#),0) AS d4Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND P.TASK_GB=#taskGbList#),0) AS totalRowSum
				FROM LETTCCMMNDETAILCODE AS A LEFT JOIN
					(SELECT D.PG_ID, P.TASK_GB, D.ACTION_ST,
				COUNT(CASE WHEN DEFECT_GB='D1' THEN 1 END) AS DEFECTGBD1,
				COUNT(CASE WHEN DEFECT_GB='D2' THEN 1 END) AS DEFECTGBD2,
				COUNT(CASE WHEN DEFECT_GB='D3' THEN 1 END) AS DEFECTGBD3,
				COUNT(CASE WHEN DEFECT_GB='D4' THEN 1 END) AS DEFECTGBD4
			FROM DEFECT_TB AS D, PG_TB AS P
			WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND P.TASK_GB = #taskGbList#
			GROUP BY ACTION_ST, TASK_GB
			ORDER BY TASK_GB, ACTION_ST
				) AS B ON A.CODE = B.ACTION_ST
				WHERE A.CODE_ID = 'ACTST'

        ]]>
    </select>
    
    <select id="defectDAO.selectPgIdByDefect" resultClass="java.lang.String">
        <![CDATA[
        	SELECT D.PG_ID AS pgId
			FROM PG_TB AS P, DEFECT_TB AS D
			WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
			GROUP BY D.PG_ID
        ]]>
    </select>
    
    <select id="defectDAO.selectPgByStats" parameterClass="java.lang.String" resultClass="java.util.HashMap" remapResults="true">
        <![CDATA[
        	SELECT IFNULL(B.PG_ID,#pgIdList#) AS pgId, IFNULL(B.PG_NM,(SELECT PG_NM FROM PG_TB WHERE PG_ID=#pgIdList#)) AS pgNm, A.CODE AS actionSt, A.CODE_NM AS actionNm,
 				IFNULL(B.DEFECTGBD1,0) AS defectGbD1, IFNULL(B.DEFECTGBD2,0) AS defectGbD2, IFNULL(B.DEFECTGBD3,0) AS defectGbD3, IFNULL(B.DEFECTGBD4,0) AS defectGbD4, IFNULL((B.DEFECTGBD1+B.DEFECTGBD2+B.DEFECTGBD3+B.DEFECTGBD4),0) AS rowSum,
 					IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D1'AND P.PG_ID=#pgIdList#),0) AS d1Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D2'AND P.PG_ID=#pgIdList#),0) AS d2Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D3'AND P.PG_ID=#pgIdList#),0) AS d3Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D4'AND P.PG_ID=#pgIdList#),0) AS d4Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND P.PG_ID=#pgIdList# ),0) AS totalRowSum 
				FROM LETTCCMMNDETAILCODE AS A LEFT JOIN(
				SELECT D.PG_ID, P.PG_NM, D.ACTION_ST,
								COUNT(CASE WHEN DEFECT_GB='D1' THEN 1 END) AS DEFECTGBD1,
								COUNT(CASE WHEN DEFECT_GB='D2' THEN 1 END) AS DEFECTGBD2,
								COUNT(CASE WHEN DEFECT_GB='D3' THEN 1 END) AS DEFECTGBD3,
								COUNT(CASE WHEN DEFECT_GB='D4' THEN 1 END) AS DEFECTGBD4
				FROM PG_TB AS P, DEFECT_TB AS D
				WHERE P.PG_ID = D.PG_ID AND P.USE_YN = 'Y' AND P.PG_ID = #pgIdList#
				GROUP BY PG_ID, ACTION_ST
				ORDER BY PG_ID, ACTION_ST)
				AS B ON A.CODE = B.ACTION_ST
				WHERE A.CODE_ID = 'ACTST'
        ]]>
    </select>
	
    <select id="defectDAO.selectUserTestIdByDefect" resultClass="java.lang.String">
        <![CDATA[
        	SELECT D.USER_TEST_ID AS userTestId
			FROM PG_TB AS P, DEFECT_TB AS D
			WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
			GROUP BY D.USER_TEST_ID
        ]]>
    </select>
    
    <select id="defectDAO.selectUserTestByStats" parameterClass="java.lang.String" resultClass="java.util.HashMap" remapResults="true">
        <![CDATA[
        	SELECT IFNULL(B.USER_TEST_ID, #userTestList#) AS userTestId, IFNULL(B.USER_TEST_NM, (SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = #userTestList#)) AS userTestNm, A.CODE AS actionSt, A.CODE_NM AS actionNm,
 				IFNULL(B.DEFECTGBD1,0) AS defectGbD1, IFNULL(B.DEFECTGBD2,0) AS defectGbD2, IFNULL(B.DEFECTGBD3,0) AS defectGbD3, IFNULL(B.DEFECTGBD4,0) AS defectGbD4, IFNULL((B.DEFECTGBD1+B.DEFECTGBD2+B.DEFECTGBD3+B.DEFECTGBD4),0) AS rowSum,
 				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D1'AND D.USER_TEST_ID=#userTestList#),0) AS d1Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D2'AND D.USER_TEST_ID=#userTestList#),0) AS d2Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D3'AND D.USER_TEST_ID=#userTestList#),0) AS d3Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D4'AND D.USER_TEST_ID=#userTestList#),0) AS d4Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.USER_TEST_ID=#userTestList# ),0) AS totalRowSum 
			FROM LETTCCMMNDETAILCODE AS A LEFT JOIN
			(SELECT D.USER_TEST_ID, (SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = D.USER_TEST_ID) AS USER_TEST_NM,D.ACTION_ST,
				COUNT(CASE WHEN DEFECT_GB='D1' THEN 1 END) AS DEFECTGBD1,
				COUNT(CASE WHEN DEFECT_GB='D2' THEN 1 END) AS DEFECTGBD2,
				COUNT(CASE WHEN DEFECT_GB='D3' THEN 1 END) AS DEFECTGBD3,
				COUNT(CASE WHEN DEFECT_GB='D4' THEN 1 END) AS DEFECTGBD4
			FROM PG_TB AS P, DEFECT_TB AS D
			WHERE P.PG_ID = D.PG_ID AND P.USE_YN = 'Y' AND USER_TEST_ID=#userTestList#
			GROUP BY D.USER_TEST_ID, ACTION_ST
			ORDER BY D.USER_TEST_ID, ACTION_ST
			)
			AS B ON A.CODE=B.ACTION_ST
			WHERE A.CODE_ID='ACTST'
        ]]>
    </select>
    
    <select id="defectDAO.selectUserDevIdByDefect" resultClass="java.lang.String">
        <![CDATA[
        SELECT P.USER_DEV_ID AS userDevId
			FROM PG_TB AS P, DEFECT_TB AS D
			WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
			GROUP BY P.USER_DEV_ID
			ORDER BY (SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = P.USER_DEV_ID)
        ]]>
    </select>
    
    <select id="defectDAO.selectUserDevByStats" parameterClass="java.lang.String" resultClass="java.util.HashMap" remapResults="true">
        <![CDATA[
			SELECT IFNULL(B.USER_DEV_ID,#userDevList#) AS userDevId, IFNULL(B.USER_DEV_NM, (SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = #userDevList#)) AS userDevNm, A.CODE AS actionSt, A.CODE_NM AS actionNm,
 				IFNULL(B.DEFECTGBD1,0) AS defectGbD1, IFNULL(B.DEFECTGBD2,0) AS defectGbD2, IFNULL(B.DEFECTGBD3,0) AS defectGbD3, IFNULL(B.DEFECTGBD4,0) AS defectGbD4, IFNULL((B.DEFECTGBD1+B.DEFECTGBD2+B.DEFECTGBD3+B.DEFECTGBD4),0) AS rowSum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D1'AND P.USER_DEV_ID=#userDevList#),0) AS d1Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D2'AND P.USER_DEV_ID=#userDevList#),0) AS d2Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D3'AND P.USER_DEV_ID=#userDevList#),0) AS d3Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND D.DEFECT_GB='D4'AND P.USER_DEV_ID=#userDevList#),0) AS d4Sum,
				IFNULL((SELECT COUNT(*) FROM DEFECT_TB AS D, PG_TB AS P WHERE P.PG_ID=D.PG_ID AND P.USE_YN='Y' AND P.USER_DEV_ID=#userDevList# ),0) AS totalRowSum 
			FROM LETTCCMMNDETAILCODE AS A LEFT JOIN
			(SELECT P.USER_DEV_ID, (SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = P.USER_DEV_ID) AS USER_DEV_NM, D.ACTION_ST,
				COUNT(CASE WHEN DEFECT_GB='D1' THEN 1 END) AS DEFECTGBD1,
				COUNT(CASE WHEN DEFECT_GB='D2' THEN 1 END) AS DEFECTGBD2,
				COUNT(CASE WHEN DEFECT_GB='D3' THEN 1 END) AS DEFECTGBD3,
				COUNT(CASE WHEN DEFECT_GB='D4' THEN 1 END) AS DEFECTGBD4
			FROM PG_TB AS P, DEFECT_TB AS D
			WHERE P.PG_ID = D.PG_ID AND P.USE_YN = 'Y' AND P.USER_DEV_ID=#userDevList#
			GROUP BY P.USER_DEV_ID, ACTION_ST
			ORDER BY P.USER_DEV_ID, ACTION_ST
			) AS B ON A.CODE=B.ACTION_ST
			WHERE A.CODE_ID='ACTST'        
        ]]>
    </select>
    
    <select id="defectDAO.selectSysByDefectCnt" resultClass="egovMap">
        <![CDATA[
        	SELECT A.CODE AS sysGb, A.CODE_NM AS sysNm, IFNULL(B.sysCnt,0) AS sysCnt
			FROM LETTCCMMNDETAILCODE AS A LEFT JOIN (
				SELECT COUNT(*) AS sysCnt, P.SYS_GB AS sysGb
				FROM DEFECT_TB AS D, PG_TB AS P
				WHERE D.PG_ID = P.PG_ID AND P.USE_YN ='Y'
				GROUP BY SYS_GB
			) AS B ON A.CODE = B.sysGb
			WHERE A.CODE_ID = 'SYSGB'
			ORDER BY sysCnt DESC
        ]]>
    </select>
    
    <select id="defectDAO.selectTaskByDefectCnt" resultClass="egovMap" parameterClass="java.lang.String">
        	SELECT A.CODE AS taskGb, A.CODE_NM AS taskNm, IFNULL(B.taskGbCnt,0) AS taskGbCnt
			FROM 
				(SELECT CODE, CODE_NM, CODE_ID FROM LETTCCMMNDETAILCODE
				<isNotEqual compareValue="전체">
				 WHERE PARENT = (SELECT CODE FROM LETTCCMMNDETAILCODE WHERE CODE_NM = #sysNm# AND CODE_ID = 'SYSGB')
				</isNotEqual>				
				 ) AS A 
				LEFT JOIN
				(SELECT P.TASK_GB AS taskGb, P.SYS_GB AS sysGb, COUNT(P.TASK_GB) AS taskGbCnt
				FROM DEFECT_TB AS D, PG_TB AS P
				WHERE D.PG_ID = P.PG_ID AND P.USE_YN ='Y'
				GROUP BY taskGb
				) AS B    
			ON A.CODE = B.taskGb
			WHERE A.CODE_ID ='TASKGB'
			ORDER BY B.taskGbCnt DESC, A.CODE ASC
    </select>
    
    <select id="defectDAO.selectUserByDefectCnt" resultClass="egovMap">
        <![CDATA[
        	SELECT IFNULL(B.USER_DEV_ID,(SELECT EMPLYR_ID FROM LETTNEMPLYRINFO WHERE USER_NM = A.USER_NM)) AS userDevId, A.USER_NM AS userNm, IFNULL(B.DEFECTCNT,0) AS defectCnt, IFNULL(B.ACTIONA3CNT,0) AS actionA3Cnt
			FROM LETTNEMPLYRINFO AS A LEFT JOIN
				(SELECT P.USER_DEV_ID, D.ACTION_ST, COUNT(*) AS DEFECTCNT, COUNT(CASE WHEN D.ACTION_ST = 'A3' THEN 1 END) AS ACTIONA3CNT
				FROM DEFECT_TB AS D, PG_TB AS P
				WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
				GROUP BY P.USER_DEV_ID)
			AS B ON A.EMPLYR_ID = B.USER_DEV_ID
			ORDER BY B.DEFECTCNT DESC, B.ACTIONA3CNT DESC
        ]]>
    </select>
    
    <select id="defectDAO.selectSysAllByActionCnt" resultClass="java.util.HashMap">
        <![CDATA[
        	SELECT CAST('sysGb' AS CHAR) AS sysGb, CAST('전체' AS CHAR) AS sysNm, COUNT(*) AS sysCntAll, COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END) AS actionStA3CntAll, ROUND(IFNULL((COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END)/COUNT(*)),0)*100,1) AS actionPerAll
			FROM DEFECT_TB AS D, PG_TB AS P
			WHERE D.PG_ID = P.PG_ID AND P.USE_YN ='Y'
        ]]>
    </select>
    
    <select id="defectDAO.selectSysByActionCnt" resultClass="egovMap">
        <![CDATA[
        	SELECT A.CODE AS sysGb, A.CODE_NM AS sysNm, IFNULL(B.SYSCNT,0) AS sysCnt, IFNULL(B.ACTIONA3CNT,0) AS actionStA3Cnt, IFNULL(B.ACTIONPER,0) AS actionPer
			FROM LETTCCMMNDETAILCODE AS A LEFT JOIN
				(SELECT P.SYS_GB AS SYSGB, COUNT(*) AS SYSCNT, COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END) AS ACTIONA3CNT, ROUND(IFNULL((COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END)/COUNT(*)),0)*100,1) AS ACTIONPER
				FROM DEFECT_TB AS D, PG_TB AS P
				WHERE D.PG_ID = P.PG_ID AND P.USE_YN ='Y'
				GROUP BY P.SYS_GB)
			AS B ON A.CODE = B.SYSGB
			WHERE A.CODE_ID = 'SYSGB'
			ORDER BY sysCnt DESC, actionA3Cnt DESC, actionPer DESC
        ]]>
    </select>
    
    <select id="defectDAO.selectTaskByActionCnt" resultClass="egovMap">
        <![CDATA[
        	SELECT P.SYS_GB AS sysGb, (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = P.SYS_GB AND CODE_ID='SYSGB') AS sysNm, P.TASK_GB AS taskGb, (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = P.TASK_GB AND CODE_ID='TASKGB') AS taskNm, COUNT(*) AS taskCnt, COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END) AS actionStA3Cnt, ROUND(IFNULL((COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END)/COUNT(*)),0)*100,1) AS actionPer
			FROM DEFECT_TB AS D, PG_TB AS P
			WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
			GROUP BY P.TASK_GB
			ORDER BY taskCnt DESC, actionStA3Cnt DESC, actionPer DESC, sysGb, taskGb
        ]]>
    </select>
    
    <select id="defectDAO.selectTaskByActionCntForSysGb" resultClass="egovMap" parameterClass="java.lang.String">
        <![CDATA[
        	SELECT PARENT AS sysGb, IFNULL(sysNm, (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE=#sysGb#)) AS sysNm, CODE AS taskGb, CODE_NM AS taskNm, IFNULL(taskCnt,0) AS taskCnt, IFNULL(actionStA3Cnt,0) AS actionStA3Cnt, IFNULL(actionPer,0) AS actionPer
			FROM ( SELECT *
				FROM LETTCCMMNDETAILCODE 
				WHERE PARENT = #sysGb#
				) AS A LEFT JOIN (
				SELECT P.SYS_GB AS sysGb, (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = #sysGb#) AS sysNm, P.TASK_GB AS taskGb, COUNT(*) AS taskCnt, COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END) AS actionStA3Cnt, ROUND(IFNULL((COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END)/COUNT(*)),0)*100,1) AS actionPer
				FROM DEFECT_TB AS D, PG_TB AS P
				WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y' AND SYS_GB = #sysGb#
				GROUP BY P.TASK_GB
			) AS B ON A.CODE = B.taskGb
			ORDER BY taskCnt DESC, actionStA3Cnt DESC, actionPer DESC, taskGb
        ]]>
    </select>
    
    <select id="defectDAO.selectSysByDefectCntAll" resultClass="egovMap">
        <![CDATA[
        	SELECT CAST('sysGb' AS CHAR) AS sysGb, CAST('전체' AS CHAR) AS sysNm, COUNT(*) AS sysCnt
			FROM DEFECT_TB AS D, PG_TB AS P
			WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
        ]]>
    </select>
    
    <select id="defectDAO.selectSysByMainStats" resultClass="egovMap">
        <![CDATA[
        	
			SELECT CAST('sysGb' AS CHAR) AS sysGb, CAST('전체' AS CHAR) AS sysNm, COUNT(*) AS sysCnt, COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END) AS actionStA3Cnt, ROUND(IFNULL((COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END)/COUNT(*)),0)*100,1) AS actionPer
			FROM DEFECT_TB AS D, PG_TB AS P
			WHERE D.PG_ID = P.PG_ID AND P.USE_YN ='Y'

			UNION ALL

			SELECT A.CODE AS sysGb, A.CODE_NM AS sysNm, IFNULL(B.SYSCNT,0) AS sysCnt, IFNULL(B.ACTIONA3CNT,0) AS actionStA3Cnt, IFNULL(B.ACTIONPER,0) AS actionPer
			FROM LETTCCMMNDETAILCODE AS A LEFT JOIN
				(SELECT P.SYS_GB AS SYSGB, COUNT(*) AS SYSCNT, COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END) AS ACTIONA3CNT, ROUND(IFNULL((COUNT(CASE WHEN D.ACTION_ST ='A3' THEN 1 END)/COUNT(*)),0)*100,1) AS ACTIONPER
				FROM DEFECT_TB AS D, PG_TB AS P
				WHERE D.PG_ID = P.PG_ID AND P.USE_YN ='Y'
				GROUP BY P.SYS_GB)
			AS B ON A.CODE = B.SYSGB
			WHERE A.CODE_ID = 'SYSGB'
			
			ORDER BY sysCnt DESC, actionStA3Cnt DESC, actionPer DESC;
        	
        ]]>
    </select>
    
    <select id="defectDAO.selectUserDevPgIdByStats" resultClass="egovMap">
        <![CDATA[
        	SELECT IFNULL(USER_NM,"합계") AS userNm, IF(ISNULL(pgNm),"소계",pgId) AS pgId, IFNULL(pgNm,"소계") AS pgNm, IFNULL(SUM(defectGbD1),0) AS defectGbD1, IFNULL(SUM(defectGbD2), 0) AS defectGbD2, IFNULL(SUM(defectGbD3), 0) AS defectGbD3, IFNULL(SUM(defectGbD4), 0) AS defectGbD4, IFNULL(SUM(actionStA3), 0) AS actionStA3, IFNULL(SUM(actionStA3Not), 0) AS actionStA3Not, IFNULL(ROUND(IFNULL(SUM(actionStA3)/(SUM(actionStA3)+SUM(actionStA3Not)),0)*100,1),0) AS actionPer
			FROM
				(SELECT A.USER_DEV_ID, A.USER_NM, B.pgId, B.pgNm, B.defectGbD1, B.defectGbD2, B.defectGbD3, B.defectGbD4, B.actionStA3, B.actionStA3Not, B.actionPer
				FROM
				(SELECT P.USER_DEV_ID, (SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = P.USER_DEV_ID) USER_NM
					FROM PG_TB AS P, DEFECT_TB AS D
					WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
					GROUP BY P.USER_DEV_ID
					ORDER BY (SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = P.USER_DEV_ID)
				) AS A LEFT OUTER JOIN
				(SELECT USER_DEV_ID, PG_ID AS pgId, PG_NM AS pgNm, IFNULL(DEFECTGBD1,0) AS defectGbD1, IFNULL(DEFECTGBD2,0) AS defectGbD2, IFNULL(DEFECTGBD3,0) AS defectGbD3, IFNULL(DEFECTGBD4,0) AS defectGbD4, IFNULL(ACTIONSTA3,0) AS actionStA3, IFNULL(ACTIONSTA3NOT,0) AS actionStA3Not, IFNULL(ACTIONPER,0) AS actionPer
					FROM 
					(SELECT P.USER_DEV_ID, P.PG_ID, P.PG_NM, P.SYS_GB, P.TASK_GB, D.DEFECT_GB, D.ACTION_ST,
					COUNT(CASE WHEN DEFECT_GB ='D1' THEN 1 END) AS DEFECTGBD1,
					COUNT(CASE WHEN DEFECT_GB ='D2' THEN 1 END) AS DEFECTGBD2,
					COUNT(CASE WHEN DEFECT_GB ='D3' THEN 1 END) AS DEFECTGBD3,
					COUNT(CASE WHEN DEFECT_GB ='D4' THEN 1 END) AS DEFECTGBD4,
					COUNT(CASE WHEN ACTION_ST = 'A3' THEN 1 END) AS ACTIONSTA3,
					COUNT(CASE WHEN ACTION_ST != 'A3' THEN 1 END) AS ACTIONSTA3NOT,
					ROUND(IFNULL(COUNT(CASE WHEN ACTION_ST = 'A3' THEN 1 END)/COUNT(ACTION_ST),0)*100,1) AS ACTIONPER
					FROM DEFECT_TB AS D, PG_TB AS P
					WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
					GROUP BY PG_ID
					ORDER BY PG_ID, SYS_GB)
					AS A
					WHERE 1=1
					ORDER BY actionPer DESC
				) AS B ON A.USER_DEV_ID	= B.USER_DEV_ID
			)	AS C
			GROUP BY C.USER_NM, C.pgNm WITH ROLLUP;
        ]]>
    </select>
    
    <select id="defectDAO.selectSysGbByStats" resultClass="egovMap">
        <![CDATA[
        	SELECT IFNULL(sysNm,"합계") AS sysNm, IFNULL(taskNm,"소계") AS taskNm, IFNULL(SUM(defectGbD1),0) AS defectGbD1, IFNULL(SUM(defectGbD2), 0) AS defectGbD2, IFNULL(SUM(defectGbD3), 0)  AS defectGbD3, IFNULL(SUM(defectGbD4), 0) AS defectGbD4, IFNULL(SUM(actionStA3), 0) AS actionStA3, IFNULL(SUM(actionStA3Not), 0) AS actionStA3Not, IFNULL(ROUND(IFNULL(SUM(actionStA3)/(SUM(actionStA3)+SUM(actionStA3Not)),0)*100,1),0) AS actionPer
			FROM
				(SELECT A.SYS_NM AS sysNm, A.TASK_NM AS taskNm, IFNULL(B.DEFECTGBD1, 0) AS defectGbD1, IFNULL(B.DEFECTGBD2, 0) AS defectGbD2, IFNULL(B.DEFECTGBD3, 0) AS defectGbD3, IFNULL(B.DEFECTGBD4, 0) AS defectGbD4, IFNULL(B.ACTIONSTA3, 0) AS actionStA3, IFNULL(B.ACTIONSTA3NOT, 0) AS actionStA3Not, IFNULL(B.ACTIONPER,0) AS actionPer
				FROM (
				SELECT * 
				FROM 
				(SELECT CODE AS SYS_GB, CODE_NM AS SYS_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID = 'SYSGB')AS A
				INNER JOIN
				(SELECT CODE AS TASK_GB, CODE_NM AS TASK_NM, PARENT FROM LETTCCMMNDETAILCODE) AS B 
				ON A.SYS_GB = B.PARENT
				ORDER BY SYS_GB, TASK_GB
				) AS A LEFT OUTER JOIN
				(SELECT P.PG_ID, P.PG_NM, P.SYS_GB, P.TASK_GB, D.DEFECT_GB, D.ACTION_ST,
					COUNT(CASE WHEN DEFECT_GB ='D1' THEN 1 END) AS DEFECTGBD1,
					COUNT(CASE WHEN DEFECT_GB ='D2' THEN 1 END) AS DEFECTGBD2,
					COUNT(CASE WHEN DEFECT_GB ='D3' THEN 1 END) AS DEFECTGBD3,
					COUNT(CASE WHEN DEFECT_GB ='D4' THEN 1 END) AS DEFECTGBD4,
					COUNT(CASE WHEN ACTION_ST = 'A3' THEN 1 END) AS ACTIONSTA3,
					COUNT(CASE WHEN ACTION_ST != 'A3' THEN 1 END) AS ACTIONSTA3NOT,
					ROUND(IFNULL(COUNT(CASE WHEN ACTION_ST = 'A3' THEN 1 END)/COUNT(ACTION_ST),0)*100,1) AS ACTIONPER
					FROM DEFECT_TB AS D, PG_TB AS P
					WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
					GROUP BY TASK_GB
				) AS B ON A.TASK_GB = B.TASK_GB
			) AS C
			GROUP BY C.sysNm, C.taskNm WITH ROLLUP;
        ]]>
    </select>
    
    <insert id="defectDAO.insertDefect" parameterClass="DefectVO">
        <![CDATA[
           INSERT INTO DEFECT_TB
           (DEFECT_ID_SQ, DEFECT_TITLE, DEFECT_CONTENT, PG_ID, USER_TEST_ID, DEFECT_GB, ENROLL_DT, ACTION_ST)
           VALUES
			(#defectIdSq#, #defectTitle#, #defectContent#, #pgId#, #userTestId#, #defectGb#, SYSDATE(), 'A1')
        ]]>
    </insert>
    
    <insert id="defectDAO.insertDefectFromTest" parameterClass="DefectVO">
        <![CDATA[
           INSERT INTO DEFECT_TB
           (DEFECT_ID_SQ, DEFECT_TITLE, DEFECT_CONTENT, PG_ID, USER_TEST_ID, DEFECT_GB, ENROLL_DT, ACTION_ST, TESTSCENARIO_ID)
           VALUES
			(#defectIdSq#, #defectTitle#, #defectContent#, #pgId#, #userTestId#, #defectGb#, SYSDATE(), 'A1', #testscenarioId#)
        ]]>
    </insert>
    
   <insert id="defectDAO.insertDefectMap" parameterClass="java.util.HashMap">
      <![CDATA[
         INSERT INTO DEFECT_TB
           (DEFECT_ID_SQ, DEFECT_TITLE, DEFECT_CONTENT, PG_ID, USER_TEST_ID, DEFECT_GB, ENROLL_DT, ACTION_ST)
           VALUES
           (#DEFECT_ID_SQ#, #DEFECT_TITLE#, #DEFECT_CONTENT#, #PG_ID#, #USER_TEST_ID#, #DEFECT_GB#, SYSDATE(), 'A1'
           )
      ]]>   
   </insert>
   
   <insert id="defectDAO.insertDefectMapFromTest" parameterClass="java.util.HashMap">
      <![CDATA[
         INSERT INTO DEFECT_TB
           (DEFECT_ID_SQ, DEFECT_TITLE, DEFECT_CONTENT, PG_ID, USER_TEST_ID, DEFECT_GB, ENROLL_DT, ACTION_ST, TESTSCENARIO_ID)
           VALUES
           (#DEFECT_ID_SQ#, #DEFECT_TITLE#, #DEFECT_CONTENT#, #PG_ID#, #USER_TEST_ID#, #DEFECT_GB#, SYSDATE(), 'A1', #TESTSCENARIO_ID#)
           )
      ]]>   
   </insert>
      
   <insert id="defectDAO.insertDefectImageMap" parameterClass="java.util.HashMap">
       <![CDATA[
          INSERT INTO FILE_TB
          (DEFECT_ID_SQ, FILE_IMG, FILE_NM, FILE_SIZE, FILE_ENROLL_DT)
          VALUES
          (#DEFECT_ID_SQ#, #FILE_IMG#, #FILE_NM#, #FILE_SIZE#, SYSDATE())
       ]]>
   </insert>
   
   <update id="defectDAO.updateDefect" parameterClass="DefectVO">
      <![CDATA[
         UPDATE DEFECT_TB 
         SET
            DEFECT_TITLE = #defectTitle#,
            DEFECT_CONTENT = #defectContent#,
            USER_TEST_ID = #userTestId#,
            DEFECT_GB = #defectGb#,
            ACTION_CONTENT = #actionContent#,
            ACTION_ST = #actionSt#,
            ACTION_DT = SYSDATE()
         WHERE DEFECT_ID_SQ = #defectIdSq#
      ]]>   
   </update>
   
   <update id="defectDAO.setDefectIdSq">
       <![CDATA[
       ALTER TABLE DEFECT_TB AUTO_INCREMENT=1;
       ]]>
   </update>
   
   <update id="defectDAO.setDefectIdSqInfo">
       <![CDATA[
       SET @COUNT=0;
       ]]>
   </update>
   
   <update id="defectDAO.setDefectIdSqImpl">
      <![CDATA[
      UPDATE DEFECT_TB SET DEFECT_TB.DEFECT_ID_SQ = @COUNT:=@COUNT+1
      WHERE 1=1;   
      ]]>       
   </update>
   
   <delete id="defectDAO.deleteDefect" parameterClass="DefectVO">
       <![CDATA[
          DELETE FROM DEFECT_TB
          WHERE DEFECT_ID_SQ = #defectIdSq#;
      ]]>
   </delete>
   
   <delete id="defectDAO.deleteDefectImg" parameterClass="java.lang.Integer">
       <![CDATA[
          DELETE FROM FILE_TB
          WHERE DEFECT_ID_SQ = #defectIdSq#
       ]]>
   </delete>
   
   <update id="defectDAO.setDefectFileSq">
       <![CDATA[
       ALTER TABLE FILE_TB AUTO_INCREMENT=1;
       ]]>
   </update>
   
   <update id="defectDAO.setDefectFileSqImpl">
      <![CDATA[
      UPDATE FILE_TB SET FILE_TB.FILE_ID_SQ = @COUNT:=@COUNT+1
      WHERE 1=1;   
      ]]>       
   </update>
   
   
</sqlMap>