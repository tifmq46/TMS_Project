<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="DevPlan">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="searchVO" type="egovframework.let.tms.dev.service.DevPlanDefaultVO"/>
	<typeAlias alias="DevPlanVO" type="egovframework.let.tms.dev.service.DevPlanVO"/>
	<typeAlias alias="CmmnDetailCode"   type="egovframework.com.cmm.service.CmmnDetailCode"/>
	<typeAlias alias="CmmnDetailCodeVO" type="egovframework.let.sym.ccm.cde.service.CmmnDetailCodeVO"/>
	
	<resultMap id="devPlanList" class="egovframework.let.tms.dev.service.DevPlanVO">
	    <result property="pgId" column="PG_ID" columnIndex="1"/>
	    <result property="planStartDt" column="PLAN_START_DT" columnIndex="2"/>
	    <result property="planEndDt" column="PLAN_END_DT" columnIndex="3"/>
	    <result property="devStartDt" column="DEV_START_DT" columnIndex="4"/>
	    <result property="devEndDt" column="DEV_END_DT" columnIndex="5"/>
	    <result property="enrollDt" column="ENROLL_DT" columnIndex="6"/>
	    <result property="devEndYn" column="DEV_END_YN" columnIndex="7"/>
	    <result property="firstTestResultYn" column="FIRST_TEST_RESULT_YN" columnIndex="8"/>
	    <result property="secondTestResultYn" column="SECOND_TEST_RESULT_YN" columnIndex="9"/>
	    <result property="thirdTestResultYn" column="THIRD_TEST_RESULT_YN" columnIndex="10"/>
	</resultMap>
	
	<resultMap id="devPlanOne" class="egovframework.let.tms.dev.service.DevPlanDefaultVO">
	    <result property="pgId" column="PG_ID" columnIndex="1"/>
	    <result property="planStartDt" column="PLAN_START_DT" columnIndex="2"/>
	    <result property="planEndDt" column="PLAN_END_DT" columnIndex="3"/>
	</resultMap>
	
	<resultMap id="devResultOne" class="egovframework.let.tms.dev.service.DevPlanDefaultVO">
	    <result property="pgId" column="PG_ID" columnIndex="1"/>
	    <result property="planStartDt" column="PLAN_START_DT" columnIndex="2"/>
	    <result property="planEndDt" column="PLAN_END_DT" columnIndex="3"/>
	    <result property="devStartDt" column="DEV_START_DT" columnIndex="4"/>
	    <result property="devEndDt" column="DEV_END_DT" columnIndex="5"/>
	</resultMap>
	
	<resultMap id="devPlanCurrent" class="java.util.HashMap">
	    <result property="cnt" column="CNT" columnIndex="1"/>
	    <result property="rateAvg" column="RATE_AVG" columnIndex="2"/>
	</resultMap>
	
	<select id="devPlanDAO.selectDevPlans" parameterClass="searchVO" resultClass="java.util.HashMap" remapResults="true">
			<![CDATA[
				SELECT * FROM	(			
				select A.PG_ID
					,A.PG_NM
					,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = A.USER_DEV_ID ) USER_DEV_ID
					,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = A.SYS_GB) AS SYS_GB
					,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = A.TASK_GB) TASK_GB
					,B.PLAN_START_DT
					,B.PLAN_END_DT
					,B.DAY_DIFF
					,A.USE_YN
			FROM PG_TB A
			LEFT JOIN DEV_PLAN_TB B
			ON A.PG_ID = B.PG_ID 
			where USE_YN ='Y')AS C
					WHERE 1=1
			]]>
			
			<isNotEqual property="sessionId" compareValue="관리자">
			    AND USER_DEV_ID = #sessionId#
			</isNotEqual>
			
            <!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb# 
			</isNotEmpty>
			
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb# 
			</isNotEmpty>
             
             
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>
			
			<!-- 계획시작일로 검색 -->
			<isNotEmpty property="searchByPlanStartDt">
			    <isNotEmpty property="searchByPlanEndDt">
			        AND PLAN_START_DT BETWEEN DATE(#searchByPlanStartDt#) AND DATE(#searchByPlanEndDt#)
			    </isNotEmpty>
			</isNotEmpty>
			        
			ORDER BY PG_ID ASC
			LIMIT #recordCountPerPage# OFFSET #firstIndex#
			
			 
	</select>
	
	<select id="DevPlanDAO.selectDevPlanListTotCnt" parameterClass="searchVO" resultClass="java.lang.Integer" >
			<![CDATA[
			SELECT COUNT(*) AS totcnt
 				FROM (		
				select A.PG_ID
					,A.PG_NM
					,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = A.USER_DEV_ID ) USER_DEV_ID
					,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = A.SYS_GB) AS SYS_GB
					,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = A.TASK_GB) TASK_GB
					,B.PLAN_START_DT
					,B.PLAN_END_DT
					,(select DATEDIFF(B.PLAN_END_DT, B.PLAN_START_DT )+1 )as dayDiff
					,A.USE_YN
			FROM PG_TB A
			LEFT JOIN DEV_PLAN_TB B
			ON A.PG_ID = B.PG_ID 
			WHERE USE_YN ='Y')AS C
					WHERE 1=1
			]]>
			
			<isNotEqual property="sessionId" compareValue="관리자">
			    AND USER_DEV_ID = #sessionId#
			</isNotEqual>
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>    
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb#
			</isNotEmpty>   
			
			<!-- 업무구분으로 검색 -->
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb#
			</isNotEmpty>   
			
			<!-- 계획시작일로 검색 -->
			<isNotEmpty property="searchByPlanStartDt">
			    <isNotEmpty property="searchByPlanEndDt">
			        AND PLAN_START_DT BETWEEN DATE(#searchByPlanStartDt#) AND DATE(#searchByPlanEndDt#)
			    </isNotEmpty>
			</isNotEmpty>

	</select>	
	
	<select id="DevPlanDAO.selectDevPlan" parameterClass="searchVO" resultClass="egovMap" >
		<![CDATA[
			SELECT * FROM (
					SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,b.PG_NM
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) AS SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,a.PLAN_START_DT
						,a.PLAN_END_DT
						,(select DATEDIFF(a.PLAN_END_DT, a.PLAN_START_DT )+1 )as dayDiff
						
					FROM DEV_PLAN_TB a
					INNER JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
					where a.PG_ID = #pgId#
					)AS one
			
				]]>				
	</select> 
	
	<select id="DevPlanDAO.ifNullDevPlan" parameterClass="java.lang.String" resultClass="java.lang.String">
	    <![CDATA[
		    select ifnull('1','0') from DEV_PLAN_TB
			where PG_ID=#pgId#
	    ]]>
	</select>
	
	<insert id="DevPlanDAO.insertDevPlan" parameterClass="DevPlanVO" >
		<![CDATA[
			INSERT INTO DEV_PLAN_TB
				(PG_ID, PLAN_START_DT, PLAN_END_DT,ENROLL_DT)
			VALUES
			( #pgId#, #planStartDt#, #planEndDt#, SYSDATE()
			 )			
		]]>
	</insert>

	
	<select id="devPlanDAO.selectDevResultList" parameterClass="searchVO" resultClass="java.util.HashMap">
			<![CDATA[
				SELECT * FROM (
					SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,b.PG_NM
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,b.USE_YN
						,b.PJT_ID
						,a.PLAN_START_DT
						,a.PLAN_END_DT
						,a.DEV_START_DT
						,a.DEV_END_DT
						,a.ENROLL_DT
						,a.DEV_END_YN
						,a.ACHIEVEMENT_RATE
					FROM DEV_PLAN_TB a
					INNER JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
					WHERE USE_YN ='Y') as c
					WHERE 1=1 
			]]>
			
			<isNotEqual property="sessionId" compareValue="관리자">
			    AND USER_DEV_ID = #sessionId#
			</isNotEqual>
			
			<!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb# 
			</isNotEmpty>
			
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb# 
			</isNotEmpty>
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>
			
			<!-- 개발시작일로 검색 -->
			<isNotEmpty property="searchByDevStartDt">
			    <isNotEmpty property="searchByDevEndDt">
			        AND DEV_START_DT BETWEEN DATE(#searchByDevStartDt#) AND DATE(#searchByDevEndDt#)
			    </isNotEmpty>
			</isNotEmpty>
			        
			ORDER BY PG_ID ASC
			LIMIT #recordCountPerPage# OFFSET #firstIndex#
	</select>
	
	<select id="DevPlanDAO.selectDevResultListTotCnt" parameterClass="searchVO" resultClass="java.lang.Integer" >
			<![CDATA[
			SELECT COUNT(*) AS totcnt
 				FROM (
					SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,a.DEV_START_DT
						,a.DEV_END_DT
						,b.USE_YN
					FROM DEV_PLAN_TB a
					LEFT JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
				WHERE USE_YN ='Y') as c
		  		WHERE 1=1
			]]>
			
			<isNotEqual property="sessionId" compareValue="관리자">
			    AND USER_DEV_ID = #sessionId#
			</isNotEqual>
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID = #searchByUserDevId#
			</isNotEmpty>    
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID = #searchByPgId#
			</isNotEmpty> 
			
			<!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb#
			</isNotEmpty>   
			
			<!-- 업무구분으로 검색 -->
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb#
			</isNotEmpty>   

			<!-- 개발시작일로 검색 -->
			<isNotEmpty property="searchByDevStartDt">
			    <isNotEmpty property="searchByDevEndDt">
			        AND DEV_START_DT BETWEEN DATE(#searchByDevStartDt#) AND DATE(#searchByDevEndDt#)
			    </isNotEmpty>
			</isNotEmpty>
	</select>	
	
	<update id="DevPlanDAO.updateDevPlan" parameterClass="DevPlanVO">
        <![CDATA[
            UPDATE DEV_PLAN_TB 
               SET PLAN_START_DT=#planStartDt#
                 , PLAN_END_DT=#planEndDt#
             WHERE PG_ID=#pgId#
        ]]>
    </update>
	
	
	<delete id="DevPlanDAO.deleteDevPlan">
        <![CDATA[
            DELETE FROM DEV_PLAN_TB 
             WHERE PG_ID=#pgId#
        ]]>
    </delete>
    
	
	<select id="DevPlanDAO.selectDevResult" parameterClass="searchVO" resultClass="egovMap">
		<![CDATA[
			SELECT * FROM (
					SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,b.PG_NM
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) AS SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,a.PLAN_START_DT
						,a.PLAN_END_DT
						,(select DATEDIFF(a.PLAN_END_DT, a.PLAN_START_DT )+1 )as dayDiff
						,a.DEV_START_DT
						,a.DEV_END_DT
						
					FROM DEV_PLAN_TB a
					INNER JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
					where a.PG_ID = #pgId#
					)AS resultOne
			
				]]>				
	</select> 
    
<!-- 	
	<insert id="DevPlanDAO.insertDevResult" parameterClass="DevPlanVO" >
		<![CDATA[
			INSERT INTO DEV_PLAN_TB
				(PG_ID, PLAN_START_DT, PLAN_END_DT,DEV_START_DT, DEV_END_DT, ENROLL_DT)
			VALUES
			( #pgId#, #planStartDt#, #planEndDt#, #devStartDt#, #devEndDt#, '2018-09-09'
			 )			
		]]>
	</insert>
	 -->
	<update id="DevPlanDAO.updateDevResult" parameterClass="DevPlanVO">
        <![CDATA[
            UPDATE DEV_PLAN_TB 
               SET DEV_START_DT=#devStartDt#
                 , DEV_END_DT=#devEndDt#
                 , ACHIEVEMENT_RATE = #achievementRate#
             WHERE PG_ID=#pgId#
        ]]>
    </update>
    
	<update id="DevPlanDAO.deleteDevResult" parameterClass="DevPlanVO">
        <![CDATA[
            UPDATE DEV_PLAN_TB 
               SET DEV_START_DT=NULL
                 , DEV_END_DT=NULL
             WHERE PG_ID=#pgId#
        ]]>
    </update>
    
	<select id="DevPlanDAO.selectDevPeriod" resultClass="egovMap">
		<![CDATA[
			select
 				date_add('2018-09-17', interval n.no week) as weeks,
				 date_format(
				    if(
				      weekday(
				        date_add('2018-09-17', interval n.no week)
				      ) = 4, 
				      date_add('2018-09-17', interval n.no week), 
				      date_add(
				        date_add('2018-09-17', interval n.no week), 
				        interval (
				          4 + weekday(
				            date_add('2018-09-17', interval n.no week)
				          )
				        ) DAY
				      )
				    ), 
				    '%m/%d'
				  ) AS formatFriday
				  from NUMBERS as n
				WHERE 
				  n.no < 6;
				]]>				
	</select> 
	
	<insert id="DevPlanDAO.insertDates" parameterClass="java.lang.String" >
		<![CDATA[
			INSERT INTO PERIOD
				(DATES)
			VALUES
			(#i#)			
		]]>
	</insert>
	
	<delete id="DevPlanDAO.deleteDates">
        <![CDATA[
            DELETE FROM PERIOD
        ]]>
    </delete>
    
	
	<select id="devPlanDAO.selectDevCurrent" parameterClass="searchVO" resultClass="java.util.HashMap" remapResults="true">
			<![CDATA[
				SELECT * FROM (
					SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,b.PG_NM
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,b.USE_YN
						,b.PJT_ID
						,a.PLAN_START_DT
						,a.PLAN_END_DT
						,a.DEV_START_DT
						,a.DEV_END_DT
						,a.ENROLL_DT
						,a.DEV_END_YN
						,a.ACHIEVEMENT_RATE
					FROM DEV_PLAN_TB a
					INNER JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
					WHERE USE_YN ='Y') as c
				WHERE 1=1
			]]>
			
			<!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb# 
			</isNotEmpty>
			
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb# 
			</isNotEmpty>
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>
			
			<!-- 개발시작일로 검색 -->
			<isNotEmpty property="searchByDevStartDt">
			    <isNotEmpty property="searchByDevEndDt">
			        AND DEV_START_DT BETWEEN DATE(#searchByDevStartDt#) AND DATE(#searchByDevEndDt#)
			    </isNotEmpty>
			</isNotEmpty>

			        
			ORDER BY PG_ID ASC
			LIMIT #recordCountPerPage# OFFSET #firstIndex#
	</select>
	
	<select id="DevPlanDAO.selectDevCurrentTotCnt" parameterClass="searchVO" resultClass="java.lang.Integer" >
			<![CDATA[
			SELECT COUNT(*) AS totcnt
 				FROM (
					SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,b.PG_NM
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,b.USE_YN
						,b.PJT_ID
						,a.PLAN_START_DT
						,a.PLAN_END_DT
						,a.DEV_START_DT
						,a.DEV_END_DT
						,a.ENROLL_DT
						,a.DEV_END_YN
						,a.ACHIEVEMENT_RATE
					FROM DEV_PLAN_TB a
					INNER JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
					WHERE USE_YN ='Y') as c
				WHERE 1=1
			]]>
			<!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb# 
			</isNotEmpty>
			
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb# 
			</isNotEmpty>
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>
			
			<!-- 개발시작일로 검색 -->
			<isNotEmpty property="searchByDevStartDt">
			    <isNotEmpty property="searchByDevEndDt">
			        AND DEV_START_DT BETWEEN DATE(#searchByDevStartDt#) AND DATE(#searchByDevEndDt#)
			    </isNotEmpty>
			</isNotEmpty>

	</select>	
	
	<update id="DevPlanDAO.updateRate" parameterClass="searchVO">
        <![CDATA[
        	UPDATE DEV_PLAN_TB 
      			SET ACHIEVEMENT_RATE=#achievementRate#
            WHERE PG_ID=#pgId#
        ]]>
    </update>
	
	<select id="DevPlanDAO.DevPlanAvg" parameterClass="searchVO" resultMap="devPlanCurrent">
	    <![CDATA[
		    select COUNT(*) AS CNT,
				ROUND (AVG(ACHIEVEMENT_RATE),1) as RATE_AVG
			from (
			SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,b.PG_NM
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,b.USE_YN
						,b.PJT_ID
						,a.PLAN_START_DT
						,a.PLAN_END_DT
						,a.DEV_START_DT
						,a.DEV_END_DT
						,a.ENROLL_DT
						,a.DEV_END_YN
						,a.ACHIEVEMENT_RATE
						
					FROM DEV_PLAN_TB a
					INNER JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
					WHERE USE_YN='Y') as c
			WHERE 1=1
	    ]]>
	    
	    <!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb# 
			</isNotEmpty>
			
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb# 
			</isNotEmpty>
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>
			
			<!-- 개발시작일로 검색 -->
			<isNotEmpty property="devStartDt">
			    <isNotEmpty property="devEndDt">
			        AND DEV_START_DT BETWEEN DATE(#devStartDt#) AND DATE(#devEndDt#)
			    </isNotEmpty>
			</isNotEmpty>
	</select>
	
	<update id="DevPlanDAO.insertDayDiff" parameterClass="searchVO" >
		<![CDATA[
			UPDATE DEV_PLAN_TB 
      			SET DAY_DIFF=#dayDiff#
            WHERE PG_ID=#pgId#
		]]>
	</update>
	
	<select id="DevPlanDAO.selectUserList" resultClass="java.lang.String">
			<![CDATA[
			SELECT DISTINCT P.USER_DEV_ID
         		FROM PG_TB AS P
		]]>
   	</select>
   	
	<select id="DevPlanDAO.selectTempList" resultClass="java.util.HashMap" remapResults="true">
			<!-- <![CDATA[
				SELECT P.PG_ID
					,P.USER_DEV_ID
					,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = P.USER_DEV_ID) AS USER_DEV_NM
					,D.PLAN_END_DT
				FROM PG_TB AS P, DEV_PLAN_TB AS D
				WHERE P.PG_ID = D.PG_ID AND P.USER_DEV_ID=#userList#
         ]]> -->
         
         <![CDATA[
			SELECT A.PG_ID, A.USER_DEV_ID
					,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = A.USER_DEV_ID) AS USER_DEV_NM
					,B.PLAN_END_DT
					,B.DEV_END_DT
				FROM
				(select * from PG_TB) AS A
				LEFT JOIN
				(SELECT * FROM DEV_PLAN_TB) AS B
				ON A.PG_ID = B.PG_ID
		]]>
   	</select>
	
    
	<select id="DevPlanDAO.selectPeriod" resultClass="java.lang.String">
			<![CDATA[
			SELECT dates
         		FROM PERIOD
		]]>
   	</select>
    
   	<update id="DevPlanDAO.updateinput1" parameterClass="java.lang.String" >
		<![CDATA[
			update PJT_TB SET INPUT_START_DT=#INPUT_START_DT# WHERE PJT_ID = '1';
		]]>
	</update>
	<update id="DevPlanDAO.updateinput2" parameterClass="java.lang.String" >
		<![CDATA[
			update PJT_TB SET INPUT_END_DT=#INPUT_END_DT# WHERE PJT_ID = '1';
		]]>
	</update>
	
	<select id="DevPlanDAO.selectSTART" resultClass="java.lang.String">
			<![CDATA[
				SELECT INPUT_START_DT FROM PJT_TB WHERE PJT_ID = '1';
         ]]>
   	</select>
   	<select id="DevPlanDAO.selectEND" resultClass="java.lang.String">
			<![CDATA[
				SELECT INPUT_END_DT FROM PJT_TB WHERE PJT_ID = '1';
         ]]>
   	</select>

	<select id="DevPlanDAO.selectDevPlanByMainStats" resultClass="egovMap">
	    <![CDATA[
	    	SELECT A.CODE AS taskGb, A.CODE_NM AS taskNm, IFNULL(B.ACHIEVECNT,0) AS achieveCnt, IFNULL(B.TASKALL,0) AS taskAll
			FROM LETTCCMMNDETAILCODE AS A INNER JOIN
				(SELECT P.TASK_GB, COUNT(CASE WHEN D.ACHIEVEMENT_RATE=100 THEN 1 END) AS ACHIEVECNT, COUNT(P.TASK_GB) AS TASKALL
				FROM DEV_PLAN_TB AS D, PG_TB AS P
				WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
				GROUP BY TASK_GB)
			AS B ON A.CODE = B.TASK_GB
			WHERE A.CODE_ID = 'TASKGB'
			ORDER BY taskAll DESC
	    ]]>
	</select>
	
	<select id="DevPlanDAO.selectSysAllByStats" resultClass="java.util.HashMap">
	    <![CDATA[
	    	SELECT IFNULL(COUNT(CASE WHEN D.ACHIEVEMENT_RATE=100 THEN 1 END),0) AS achieveAllCnt, IFNULL(COUNT(P.SYS_GB),0) AS sysAll
			FROM DEV_PLAN_TB AS D, PG_TB AS P
			WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
	    ]]>
	</select>
	
	<select id="DevPlanDAO.selectSysByStats" resultClass="java.util.HashMap">
	    <![CDATA[
	    	SELECT A.CODE AS sysGb, A.CODE_NM AS sysNm, IFNULL(B.ACHIEVECNT,0) AS achieveCnt, IFNULL(B.SYSALL,0) AS sysAll
			FROM LETTCCMMNDETAILCODE AS A INNER JOIN
				(SELECT SYS_GB, COUNT(CASE WHEN D.ACHIEVEMENT_RATE=100 THEN 1 END) AS ACHIEVECNT, COUNT(P.SYS_GB) AS SYSALL
				FROM DEV_PLAN_TB AS D, PG_TB AS P
				WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
				GROUP BY SYS_GB
			) AS B ON A.CODE=B.SYS_GB
			WHERE A.CODE_ID = 'SYSGB'
			ORDER BY sysAll DESC
	    ]]>
	</select>
	
	<select id="DevPlanDAO.selectUserPlanWeekStats" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
			<![CDATA[
				SELECT IFNULL(USER_DEV_ID, #userList#) as userDevId
				,IFNULL( USER_DEV_NM, (SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = #userList#)) AS userDevNm
				,IFNULL ((COUNT(CASE WHEN WP=#dt# THEN 1 END)),0) AS #dt#

				FROM
				(SELECT PG_ID, USER_DEV_ID, USER_DEV_NM, TASK_GB, WP, WD, W FROM
					(SELECT A.PG_ID, A.USER_DEV_ID,A.USER_DEV_NM, A.TASK_GB, B.WP,B.WD FROM 
						(SELECT PG_ID,USER_DEV_ID,
							(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = USER_DEV_ID)AS USER_DEV_NM
						,TASK_GB,USE_YN FROM PG_TB WHERE USE_YN='Y') AS A
							 LEFT JOIN 
						(SELECT PG_ID ,WEEKOFYEAR(PLAN_END_DT) AS WP, WEEKOFYEAR(DEV_END_DT) AS WD FROM DEV_PLAN_TB) AS B
							 ON A.PG_ID = B.PG_ID
							 ORDER BY USER_DEV_ID
							 )AS C
						
						LEFT JOIN
						(SELECT DISTINCT WEEKOFYEAR(dates) AS W from PERIOD) AS D
				ON C.WP = D.W
				)AS F
				WHERE USER_DEV_ID=#userList#
				GROUP BY USER_DEV_ID
				ORDER BY USER_DEV_ID
         ]]>
   	</select>
   	
	<select id="DevPlanDAO.selectPeriodWeek" resultClass="java.lang.String">
			<![CDATA[
			SELECT DISTINCT WEEKOFYEAR(dates) AS W 
				from PERIOD
		]]>
   	</select>
   	
	<select id="DevPlanDAO.selectPeriodMonthWeek" resultClass="java.lang.String">
			<![CDATA[
			SELECT CONCAT(MD, "월", MW,"주") AS ST FROM
			(
				SELECT DISTINCT 
						MONTH(DATES) AS MD,
						WEEK(DATES,5) - WEEK(DATE_SUB(DATES,INTERVAL DAYOFMONTH(DATES)-1 DAY),5) + 1 AS MW
				FROM PERIOD) A
		]]>
   	</select>
   	
	<select id="DevPlanDAO.selectUserDevWeekStats" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
			<![CDATA[
				SELECT IFNULL(USER_DEV_ID, #userList#) as userDevId
				,IFNULL( USER_DEV_NM, (SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = #userList#)) AS userDevNm
				,IFNULL ((COUNT(CASE WHEN WD=#dt# THEN 1 END)),0) AS #dt#

				FROM
				(SELECT PG_ID, USER_DEV_ID, USER_DEV_NM, TASK_GB, WP, WD, W FROM
					(SELECT A.PG_ID, A.USER_DEV_ID,A.USER_DEV_NM, A.TASK_GB, B.WP,B.WD FROM 
						(SELECT PG_ID,USER_DEV_ID,
							(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = USER_DEV_ID)AS USER_DEV_NM
						,TASK_GB,USE_YN FROM PG_TB WHERE USE_YN='Y') AS A
							 LEFT JOIN 
						(SELECT PG_ID ,WEEKOFYEAR(PLAN_END_DT) AS WP, WEEKOFYEAR(DEV_END_DT) AS WD FROM DEV_PLAN_TB) AS B
							 ON A.PG_ID = B.PG_ID
							 ORDER BY USER_DEV_ID
							 )AS C
						
						LEFT JOIN
						(SELECT DISTINCT WEEKOFYEAR(dates) AS W from PERIOD) AS D
				ON C.WP = D.W
				)AS F
				WHERE USER_DEV_ID=#userList#
				GROUP BY USER_DEV_ID
				ORDER BY USER_DEV_ID
         ]]>
   	</select>
   	
	<select id="DevPlanDAO.selectTaskPlanWeekStats" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
			<![CDATA[
			SELECT IFNULL(TASK_GB, #taskGbList#) AS taskGb
				,IFNULL(TASK_GB_NM, (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID="TASKGB" AND CODE = #taskGbList#)) AS taskGbNm
				,IFNULL((COUNT(CASE WHEN WP=#dt# THEN 1 END)),0) AS #dt#
				FROM
				(SELECT PG_ID, USER_DEV_ID, USER_DEV_NM, TASK_GB, TASK_GB_NM, WP, WD, W FROM
					(SELECT A.PG_ID, A.USER_DEV_ID,A.USER_DEV_NM, A.TASK_GB, B.WP,B.WD, A.TASK_GB_NM FROM 
						(SELECT PG_ID,USER_DEV_ID,
							(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = USER_DEV_ID)AS USER_DEV_NM
						,TASK_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = TASK_GB) AS TASK_GB_NM
						,USE_YN FROM PG_TB WHERE USE_YN='Y') AS A
							 LEFT JOIN 
						(SELECT PG_ID ,WEEKOFYEAR(PLAN_END_DT) AS WP, WEEKOFYEAR(DEV_END_DT) AS WD FROM DEV_PLAN_TB) AS B
							 ON A.PG_ID = B.PG_ID
							 ORDER BY TASK_GB
							 )AS C
						
						LEFT JOIN
						(SELECT DISTINCT WEEKOFYEAR(dates) AS W from PERIOD) AS D
				ON C.WP = D.W
				)AS F
			WHERE TASK_GB=#taskGbList#
			GROUP BY TASK_GB
			ORDER BY TASK_GB 
         ]]>
   	</select>
   	
	<select id="DevPlanDAO.selectSysGbList" resultClass="java.lang.String">
			<![CDATA[
				SELECT CODE FROM LETTCCMMNDETAILCODE 
					WHERE CODE_ID = "SYSGB"
		]]>
   	</select>
   	
	<select id="DevPlanDAO.selectTaskGbList" resultClass="java.lang.String">
			<![CDATA[
				SELECT CODE FROM LETTCCMMNDETAILCODE 
					WHERE CODE_ID = "TASKGB"
		]]>
   	</select>
   	
   	<select id="DevPlanDAO.selectTaskDevWeekStats" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
			<![CDATA[
			SELECT IFNULL(TASK_GB, #taskGbList#) AS taskGb
				,IFNULL(TASK_GB_NM, (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID="TASKGB" AND CODE = #taskGbList#)) AS taskGbNm
				,IFNULL((COUNT(CASE WHEN WD=#dt# THEN 1 END)),0) AS #dt#
				FROM
				(SELECT PG_ID, USER_DEV_ID, USER_DEV_NM, TASK_GB, TASK_GB_NM, WP, WD, W FROM
					(SELECT A.PG_ID, A.USER_DEV_ID,A.USER_DEV_NM, A.TASK_GB, B.WP,B.WD, A.TASK_GB_NM FROM 
						(SELECT PG_ID,USER_DEV_ID,
							(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = USER_DEV_ID)AS USER_DEV_NM
						,TASK_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = TASK_GB) AS TASK_GB_NM
						,USE_YN FROM PG_TB WHERE USE_YN='Y') AS A
							 LEFT JOIN 
						(SELECT PG_ID ,WEEKOFYEAR(PLAN_END_DT) AS WP, WEEKOFYEAR(DEV_END_DT) AS WD FROM DEV_PLAN_TB) AS B
							 ON A.PG_ID = B.PG_ID
							 ORDER BY TASK_GB
							 )AS C
						
						LEFT JOIN
						(SELECT DISTINCT WEEKOFYEAR(dates) AS W from PERIOD) AS D
				ON C.WP = D.W
				)AS F
			WHERE TASK_GB=#taskGbList#
			GROUP BY TASK_GB
			ORDER BY TASK_GB 
         ]]>
   	</select>
   	
   	<select id="DevPlanDAO.selectPlanSum" parameterClass="java.lang.String" resultClass="java.lang.String">
			<![CDATA[
				select count(*) from DEV_PLAN_TB AS D
					INNER JOIN PG_TB AS P
				ON D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
					WHERE WEEKOFYEAR(PLAN_END_DT) = #weekList#
         ]]>
   	</select>
	
   	
	<select id="DevPlanDAO.selectDevSum" parameterClass="java.lang.String" resultClass="java.lang.String">
			<![CDATA[
				select count(*) from DEV_PLAN_TB AS D
					INNER JOIN PG_TB AS P
				ON D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
					WHERE WEEKOFYEAR(DEV_END_DT) = #weekList#
         ]]>
   	</select>
   	
	<select id="DevPlanDAO.selectThisWeekStats" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
				
	    		<isEqual property="codeType" compareValue="task">
					    <![CDATA[
					    	SELECT 
					    		#taskList# AS TASK_GB
								,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE=#taskList#) AS TASK_NM
								,CNTA
								,CNTB
								,ROUND((IFNULL((CNTB/CNTA),0)*100),1) AS R
							FROM
							(SELECT COUNT(*) CNTA, TASK_GB, SYS_GB
								FROM DEV_PLAN_TB AS D, PG_TB AS P
								WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' 
								AND P.TASK_GB=#taskList#
								AND WEEKOFYEAR(D.PLAN_END_DT) = WEEKOFYEAR(NOW())) AS A,
						
							(SELECT COUNT(*) CNTB
								FROM DEV_PLAN_TB AS D, PG_TB AS P
								WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' 
								AND P.TASK_GB=#taskList#
								AND WEEKOFYEAR(D.DEV_END_DT) = WEEKOFYEAR(NOW())) AS B
					    ]]>
				</isEqual>
	    	
				<isEqual property="codeType" compareValue="sys">
					    <![CDATA[
					    	SELECT
					    		#sysList# AS SYS_GB 
					    		,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE=#sysList#) AS SYS_NM
								,CNTA
								,CNTB
								,ROUND((IFNULL((CNTB/CNTA),0)*100),1) AS R
								
							FROM
							(SELECT COUNT(*) CNTA, SYS_GB, TASK_GB
								FROM DEV_PLAN_TB AS D, PG_TB AS P
								WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' 
								AND P.SYS_GB=#sysList#
								AND WEEKOFYEAR(D.PLAN_END_DT) = WEEKOFYEAR(NOW())) AS A,
						
							(SELECT COUNT(*) CNTB
								FROM DEV_PLAN_TB AS D, PG_TB AS P
								WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' 
								AND P.SYS_GB=#sysList#
								AND WEEKOFYEAR(D.DEV_END_DT) = WEEKOFYEAR(NOW())) AS B
					    ]]>
				</isEqual>
				
				
   	</select>
   	
	<select id="DevPlanDAO.selectAccumulateStats" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
			
	    		<isEqual property="codeType" compareValue="task">
					    <![CDATA[
					    	SELECT 	#taskList# AS TASK_GB
					    			,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE=#taskList# ) AS TASK_NM
									,CNTA
									,CNTB
									,ROUND((IFNULL((CNTB/CNTA),0)*100),1) AS R
							FROM
								(SELECT COUNT(*) CNTA, TASK_GB
									FROM DEV_PLAN_TB AS D, PG_TB AS P
									WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND P.TASK_GB=#taskList# 
									AND WEEKOFYEAR(D.PLAN_END_DT) <= WEEKOFYEAR(NOW())
								) AS A,
							
								(SELECT COUNT(*) CNTB
									FROM DEV_PLAN_TB AS D, PG_TB AS P
									WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND P.TASK_GB=#taskList# 
									AND WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW())
								) AS B
					    ]]>
				</isEqual>
	    	
				<isEqual property="codeType" compareValue="sys">
					    <![CDATA[
					    	SELECT #sysList# AS SYS_GB 
					    			,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE=#sysList#) AS SYS_NM
									,CNTA
									,CNTB
									,ROUND((IFNULL((CNTB/CNTA),0)*100),1) AS R
							FROM
								(SELECT COUNT(*) CNTA, TASK_GB
									FROM DEV_PLAN_TB AS D, PG_TB AS P
									WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND P.SYS_GB=#sysList# 
									AND WEEKOFYEAR(D.PLAN_END_DT) <= WEEKOFYEAR(NOW())
								) AS A,
							
								(SELECT COUNT(*) CNTB
									FROM DEV_PLAN_TB AS D, PG_TB AS P
									WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND P.SYS_GB=#sysList# 
									AND WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW())
								) AS B
					    ]]>
				</isEqual>
   	</select>
   	
	<select id="DevPlanDAO.selectTotalStats" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
			
	    		<isEqual property="codeType" compareValue="task">
					    <![CDATA[
					    	SELECT #taskList# AS TASK_GB
									,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE=#taskList#) AS TASK_NM
									,CNTA
									,CNTB
									,ROUND((IFNULL((CNTB/CNTA),0)*100),1) AS R
							FROM
								(SELECT COUNT(*) CNTA, TASK_GB
									FROM PG_TB AS P
									WHERE USE_YN='Y' AND TASK_GB=#taskList#
									) AS A,
							
								(SELECT COUNT(*) CNTB
									FROM DEV_PLAN_TB AS D, PG_TB AS P
									WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' 
									AND WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW())
									AND P.TASK_GB=#taskList# 
								) AS B
					    ]]>
				</isEqual>
	    	
				<isEqual property="codeType" compareValue="sys">
					    <![CDATA[
					    	SELECT #sysList# AS SYS_GB 
					    			,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE=#sysList#) AS SYS_NM
									,CNTA
									,CNTB
									,ROUND((IFNULL((CNTB/CNTA),0)*100),1) AS R
							FROM
								(SELECT COUNT(*) CNTA, SYS_GB
									FROM PG_TB AS P
									WHERE USE_YN='Y' AND SYS_GB=#sysList#
									) AS A,
							
								(SELECT COUNT(*) CNTB
									FROM DEV_PLAN_TB AS D, PG_TB AS P
									WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' 
									AND WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW())
									AND P.SYS_GB=#sysList# 
								) AS B
					    ]]>
				</isEqual>			
   	</select>
   	
	<select id="DevPlanDAO.selectStatsTable" resultClass="egovMap" >
			<![CDATA[
				SELECT
					IFNULL(W.SYS_NM,"합계")AS SYS_NM
					,IFNULL(W.TASK_NM,"소계")AS TASK_NM
					,IFNULL(SUM(TOT_CNT),NULL) AS TOT_CNT
					,IFNULL(SUM(TP),NULL) AS TP
					,IFNULL(SUM(TD),NULL) AS TD
					,IFNULL(SUM(TR),NULL) AS TR
					,IFNULL(SUM(AP),NULL) AS AP
					,IFNULL(SUM(AD),NULL) AS AD
					,IFNULL(SUM(AR),NULL) AS AR
					,IFNULL(SUM(TOT_D),NULL) AS TOT_D
					,IFNULL(SUM(TOT),NULL) AS TOT
				FROM
					(SELECT * 
							,ROUND((IFNULL((TOT_D/TOT_CNT),0)*100),1) AS TOT
						FROM 
							(SELECT 
								SYS_NM ,TASK_NM, F.SYS_GB, F.TASK_GB
								,IFNULL(TOT_CNT,0) AS TOT_CNT
								,IFNULL(TP,0) AS TP, IFNULL(TD,0) AS TD, IFNULL(TR,0) AS TR
								,IFNULL(AP,0) AS AP, IFNULL(AD,0) AS AD, IFNULL(AR,0) AS AR
								,IFNULL(AD,0) AS TOT_D
								FROM
									(SELECT C.SYS_GB, SYS_NM, C.TASK_GB, TASK_NM, IFNULL(TOT_CNT,0) AS TOT_CNT
											FROM
										(SELECT * 
											FROM 
												(SELECT CODE AS SYS_GB, CODE_NM AS SYS_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID = 'SYSGB')AS A
											INNER JOIN
												(SELECT CODE AS TASK_GB, CODE_NM AS TASK_NM, PARENT FROM LETTCCMMNDETAILCODE) AS B 
											ON A.SYS_GB = B.PARENT
										)AS C
										LEFT OUTER JOIN
										(SELECT TASK_GB,COUNT(*) AS TOT_CNT, PG_ID FROM PG_TB WHERE USE_YN='Y' GROUP BY TASK_GB)AS PG_TB
										ON C.TASK_GB = PG_TB.TASK_GB
									) AS F	
									
									LEFT JOIN
									(SELECT *, ROUND((IFNULL((TD/TP),0)*100),1) AS TR, ROUND((IFNULL((AD/AP),0)*100),1) AS AR
										 	FROM
												(SELECT SYS_GB, TASK_GB
													,COUNT(IF( WEEKOFYEAR(D.PLAN_END_DT)=WEEKOFYEAR(NOW()),1,NULL)) AS TP
													,COUNT(IF( WEEKOFYEAR(D.DEV_END_DT)=WEEKOFYEAR(NOW()),1,NULL)) AS TD
													,COUNT(IF( WEEKOFYEAR(D.PLAN_END_DT) <= WEEKOFYEAR(NOW()),1,NULL)) AS AP
													,COUNT(IF( WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW()),1,NULL)) AS AD
													FROM DEV_PLAN_TB D, PG_TB P
													WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y'
													GROUP BY SYS_GB, TASK_GB
													)AS Z) AS G
									ON G.TASK_GB = F.TASK_GB
							)AS X
						)AS W
						GROUP BY W.SYS_NM, W.TASK_NM WITH ROLLUP
         ]]>
   	</select>
	
</sqlMap>
