<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="DevPlan">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="searchVO" type="egovframework.let.tms.dev.service.DevPlanDefaultVO"/>
	<typeAlias alias="DevPlanVO" type="egovframework.let.tms.dev.service.DevPlanVO"/>
	<typeAlias alias="CmmnDetailCode"   type="egovframework.com.cmm.service.CmmnDetailCode"/>
	<typeAlias alias="CmmnDetailCodeVO" type="egovframework.let.sym.ccm.cde.service.CmmnDetailCodeVO"/>

	<resultMap id="devPlanCurrent" class="java.util.HashMap">
	    <result property="cnt" column="CNT" columnIndex="1"/>
	    <result property="rateAvg" column="RATE_AVG" columnIndex="2"/>
	</resultMap>
	
	<select id="devPlanDAO.selectDevPlans" parameterClass="searchVO" resultClass="java.util.HashMap" remapResults="true">
			<![CDATA[
				SELECT * FROM	(			
				select A.PG_ID
					,A.PG_NM
					,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = A.USER_DEV_ID ) USER_DEV_ID
					,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = A.SYS_GB) AS SYS_GB
					,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = A.TASK_GB) TASK_GB
					,B.PLAN_START_DT
					,B.PLAN_END_DT
					,B.DAY_DIFF
					,A.USE_YN
			FROM PG_TB A
			LEFT JOIN DEV_PLAN_TB B
			ON A.PG_ID = B.PG_ID 
			where USE_YN ='Y')AS C
					WHERE 1=1
			]]>
			
			<isNotEqual property="sessionId" compareValue="관리자">
			    AND USER_DEV_ID = #sessionId#
			</isNotEqual>
			
            <!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb# 
			</isNotEmpty>
			
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb# 
			</isNotEmpty>
             
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>
			
			<!-- 계획시작일로 검색 -->
			<isNotEmpty property="searchByPlanStartDt">
			    <isNotEmpty property="searchByPlanEndDt">
			        AND PLAN_END_DT BETWEEN DATE(#searchByPlanStartDt#) AND DATE(#searchByPlanEndDt#)
			    </isNotEmpty>
			</isNotEmpty>
			        
			ORDER BY PG_ID ASC
			LIMIT #recordCountPerPage# OFFSET #firstIndex#
			
			 
	</select>
	
	<select id="DevPlanDAO.selectDevPlanListTotCnt" parameterClass="searchVO" resultClass="java.lang.Integer" >
			<![CDATA[
			SELECT COUNT(*) AS totcnt
 				FROM (		
				select A.PG_ID
					,A.PG_NM
					,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = A.USER_DEV_ID ) USER_DEV_ID
					,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = A.SYS_GB) AS SYS_GB
					,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = A.TASK_GB) TASK_GB
					,B.PLAN_START_DT
					,B.PLAN_END_DT
					,(select DATEDIFF(B.PLAN_END_DT, B.PLAN_START_DT )+1 )as dayDiff
					,A.USE_YN
			FROM PG_TB A
			LEFT JOIN DEV_PLAN_TB B
			ON A.PG_ID = B.PG_ID 
			WHERE USE_YN ='Y')AS C
					WHERE 1=1
			]]>
			
			<isNotEqual property="sessionId" compareValue="관리자">
			    AND USER_DEV_ID = #sessionId#
			</isNotEqual>
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>    
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb#
			</isNotEmpty>   
			
			<!-- 업무구분으로 검색 -->
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb#
			</isNotEmpty>   
			
			<!-- 계획시작일로 검색 -->
			<isNotEmpty property="searchByPlanStartDt">
			    <isNotEmpty property="searchByPlanEndDt">
			        AND PLAN_END_DT BETWEEN DATE(#searchByPlanStartDt#) AND DATE(#searchByPlanEndDt#)
			    </isNotEmpty>
			</isNotEmpty>

	</select>	

	<select id="DevPlanDAO.ifNullDevPlan" parameterClass="java.lang.String" resultClass="java.lang.String">
	    <![CDATA[
		    select ifnull('1','0') from DEV_PLAN_TB
			where PG_ID=#pgId#
	    ]]>
	</select>
	
	<insert id="DevPlanDAO.insertDevPlan" parameterClass="DevPlanVO" >
		<![CDATA[
			INSERT INTO DEV_PLAN_TB
				(PG_ID, PLAN_START_DT, PLAN_END_DT,ENROLL_DT)
			VALUES
			( #pgId#, #planStartDt#, #planEndDt#, SYSDATE()
			 )			
		]]>
	</insert>

	
	<select id="devPlanDAO.selectDevResultList" parameterClass="searchVO" resultClass="java.util.HashMap">
			<![CDATA[
				SELECT * FROM (
					SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,b.PG_NM
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,b.USE_YN
						,b.PJT_ID
						,a.PLAN_START_DT
						,a.PLAN_END_DT
						,a.DEV_START_DT
						,a.DEV_END_DT
						,a.ENROLL_DT
						,a.DEV_END_YN
						,a.ACHIEVEMENT_RATE
					FROM DEV_PLAN_TB a
					INNER JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
					WHERE USE_YN ='Y') as c
					WHERE 1=1 
			]]>
			
			<isNotEqual property="sessionId" compareValue="관리자">
			    AND USER_DEV_ID = #sessionId#
			</isNotEqual>
			
			<!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb# 
			</isNotEmpty>
			
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb# 
			</isNotEmpty>
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>
			
			<!-- 개발시작일로 검색 -->
			<isNotEmpty property="searchByDevStartDt">
			    <isNotEmpty property="searchByDevEndDt">
			        AND DEV_END_DT BETWEEN DATE(#searchByDevStartDt#) AND DATE(#searchByDevEndDt#)
			    </isNotEmpty>
			</isNotEmpty>
			        
			ORDER BY PG_ID ASC
			LIMIT #recordCountPerPage# OFFSET #firstIndex#
	</select>
	
	<select id="DevPlanDAO.selectDevResultListTotCnt" parameterClass="searchVO" resultClass="java.lang.Integer" >
			<![CDATA[
			SELECT COUNT(*) AS totcnt
 				FROM (
					SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,a.DEV_START_DT
						,a.DEV_END_DT
						,b.USE_YN
					FROM DEV_PLAN_TB a
					LEFT JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
				WHERE USE_YN ='Y') as c
		  		WHERE 1=1
			]]>
			
			<isNotEqual property="sessionId" compareValue="관리자">
			    AND USER_DEV_ID = #sessionId#
			</isNotEqual>
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID = #searchByUserDevId#
			</isNotEmpty>    
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID = #searchByPgId#
			</isNotEmpty> 
			
			<!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb#
			</isNotEmpty>   
			
			<!-- 업무구분으로 검색 -->
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb#
			</isNotEmpty>   

			<!-- 개발시작일로 검색 -->
			<isNotEmpty property="searchByDevStartDt">
			    <isNotEmpty property="searchByDevEndDt">
			        AND DEV_END_DT BETWEEN DATE(#searchByDevStartDt#) AND DATE(#searchByDevEndDt#)
			    </isNotEmpty>
			</isNotEmpty>
	</select>	
	
	<update id="DevPlanDAO.updateDevPlan" parameterClass="DevPlanVO">
        <![CDATA[
            UPDATE DEV_PLAN_TB 
               SET PLAN_START_DT=#planStartDt#
                 , PLAN_END_DT=#planEndDt#
             WHERE PG_ID=#pgId#
        ]]>
    </update>
	
	
	<delete id="DevPlanDAO.deleteDevPlan">
        <![CDATA[
            DELETE FROM DEV_PLAN_TB 
             WHERE PG_ID=#pgId#
        ]]>
    </delete>

	<update id="DevPlanDAO.updateDevResult" parameterClass="DevPlanVO">
        <![CDATA[
            UPDATE DEV_PLAN_TB 
               SET DEV_START_DT=#devStartDt#
                 , DEV_END_DT=#devEndDt#
                 , ACHIEVEMENT_RATE = #achievementRate#
             WHERE PG_ID=#pgId#
        ]]>
    </update>
    
	<update id="DevPlanDAO.deleteDevResult" parameterClass="DevPlanVO">
        <![CDATA[
            UPDATE DEV_PLAN_TB 
               SET DEV_START_DT=NULL
                 , DEV_END_DT=NULL
             WHERE PG_ID=#pgId#
        ]]>
    </update>
    
	<insert id="DevPlanDAO.insertDates" parameterClass="java.lang.String" >
		<![CDATA[
			INSERT INTO PERIOD
				(DATES)
			VALUES
			(#i#)			
		]]>
	</insert>
	
	<delete id="DevPlanDAO.deleteDates">
        <![CDATA[
            DELETE FROM PERIOD
        ]]>
    </delete>
    
	
	<select id="DevPlanDAO.selectDevCurrent" parameterClass="searchVO" resultClass="java.util.HashMap" remapResults="true">
			<![CDATA[
				SELECT * FROM (
					SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,b.PG_NM
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,b.USE_YN
						,b.PJT_ID
						,a.PLAN_START_DT
						,a.PLAN_END_DT
						,a.DEV_START_DT
						,a.DEV_END_DT
						,a.ENROLL_DT
						,a.DEV_END_YN
						,a.ACHIEVEMENT_RATE
					FROM DEV_PLAN_TB a
					INNER JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
					WHERE USE_YN ='Y') as c
				WHERE 1=1
			]]>
			
			<!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb# 
			</isNotEmpty>
			
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb# 
			</isNotEmpty>
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>
			
			<!-- 개발시작일로 검색 -->
			<isNotEmpty property="searchByDevStartDt">
			    <isNotEmpty property="searchByDevEndDt">
			        AND DEV_END_DT BETWEEN DATE(#searchByDevStartDt#) AND DATE(#searchByDevEndDt#)
			    </isNotEmpty>
			</isNotEmpty>

			        
			ORDER BY PG_ID ASC
			LIMIT #recordCountPerPage# OFFSET #firstIndex#
	</select>
	
	<select id="DevPlanDAO.selectDevCurrentTotCnt" parameterClass="searchVO" resultClass="java.lang.Integer" >
			<![CDATA[
			SELECT COUNT(*) AS totcnt
 				FROM (
					SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,b.PG_NM
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,b.USE_YN
						,b.PJT_ID
						,a.PLAN_START_DT
						,a.PLAN_END_DT
						,a.DEV_START_DT
						,a.DEV_END_DT
						,a.ENROLL_DT
						,a.DEV_END_YN
						,a.ACHIEVEMENT_RATE
					FROM DEV_PLAN_TB a
					INNER JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
					WHERE USE_YN ='Y') as c
				WHERE 1=1
			]]>
			<!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb# 
			</isNotEmpty>
			
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb# 
			</isNotEmpty>
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>
			
			<!-- 개발시작일로 검색 -->
			<isNotEmpty property="searchByDevStartDt">
			    <isNotEmpty property="searchByDevEndDt">
			        AND DEV_END_DT BETWEEN DATE(#searchByDevStartDt#) AND DATE(#searchByDevEndDt#)
			    </isNotEmpty>
			</isNotEmpty>

	</select>	
	
	<update id="DevPlanDAO.updateRate" parameterClass="searchVO">
        <![CDATA[
        	UPDATE DEV_PLAN_TB 
      			SET ACHIEVEMENT_RATE=#achievementRate#
            WHERE PG_ID=#pgId#
        ]]>
    </update>
	
	<select id="DevPlanDAO.DevPlanAvg" parameterClass="searchVO" resultMap="devPlanCurrent">
	    <![CDATA[
		    select COUNT(*) AS CNT,
				ROUND (AVG(ACHIEVEMENT_RATE),1) as RATE_AVG
			from (
			SELECT
						b.PG_ID
						,(SELECT USER_NM FROM LETTNEMPLYRINFO WHERE EMPLYR_ID = b.USER_DEV_ID ) USER_DEV_ID
						,b.PG_NM
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.SYS_GB) SYS_GB
						,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = b.TASK_GB) TASK_GB
						,b.USE_YN
						,b.PJT_ID
						,a.PLAN_START_DT
						,a.PLAN_END_DT
						,a.DEV_START_DT
						,a.DEV_END_DT
						,a.ENROLL_DT
						,a.DEV_END_YN
						,a.ACHIEVEMENT_RATE
						
					FROM DEV_PLAN_TB a
					INNER JOIN PG_TB b
					ON a.PG_ID = b.PG_ID
					WHERE USE_YN='Y') as c
			WHERE 1=1
	    ]]>
	    
	    <!-- 시스템구분으로 검색 -->
			<isNotEmpty property="searchBySysGb">
			    AND SYS_GB = #searchBySysGb# 
			</isNotEmpty>
			
			<isNotEmpty property="searchByTaskGb">
			    AND TASK_GB = #searchByTaskGb# 
			</isNotEmpty>
			
			<!-- 화면ID로 검색 -->
			<isNotEmpty property="searchByPgId">
			    AND PG_ID LIKE CONCAT ('%', #searchByPgId#, '%')
			</isNotEmpty> 
			
			<!-- 개발자명으로 검색 -->
			<isNotEmpty property="searchByUserDevId">
			    AND USER_DEV_ID LIKE CONCAT ('%', #searchByUserDevId#, '%')
			</isNotEmpty>
			
			<!-- 개발시작일로 검색 -->
			<isNotEmpty property="searchByDevStartDt">
			    <isNotEmpty property="searchByDevEndDt">
			        AND DEV_END_DT BETWEEN DATE(#searchByDevStartDt#) AND DATE(#searchByDevEndDt#)
			    </isNotEmpty>
			</isNotEmpty>
	</select>
	
	<update id="DevPlanDAO.insertDayDiff" parameterClass="searchVO" >
		<![CDATA[
			UPDATE DEV_PLAN_TB 
      			SET DAY_DIFF=#dayDiff#
            WHERE PG_ID=#pgId#
		]]>
	</update>
	
	<select id="DevPlanDAO.selectUserList" resultClass="java.lang.String">
			<![CDATA[
			SELECT EMPLYR_ID FROM LETTNEMPLYRINFO WHERE ESNTL_ID='USRCNFRM_00000000002' OR ESNTL_ID='USRCNFRM_00000000001'
			ORDER BY USER_NM
		]]>
   	</select>
   	
	<select id="DevPlanDAO.selectPeriod" resultClass="java.lang.String">
			<![CDATA[
			SELECT dates
         		FROM PERIOD
		]]>
   	</select>
	
	<select id="DevPlanDAO.selectSTART" resultClass="java.lang.String">
			<![CDATA[
				SELECT INPUT_START_DT FROM PJT_TB WHERE PJT_ID = '1';
         ]]>
   	</select>
   	<select id="DevPlanDAO.selectEND" resultClass="java.lang.String">
			<![CDATA[
				SELECT INPUT_END_DT FROM PJT_TB WHERE PJT_ID = '1';
         ]]>
   	</select>

	<select id="DevPlanDAO.selectDevPlanByMainStats" resultClass="egovMap">
	    <![CDATA[
			SELECT CAST('sysGb' AS CHAR) AS sysGb, CAST('전체' AS CHAR) AS sysNm, ROUND((IFNULL((cntB/cntA),0)*100),1) AS rate
						FROM
						(SELECT COUNT(*)AS cntA FROM PG_TB WHERE USE_YN ='Y')AS A,
						(SELECT COUNT(*) cntB FROM DEV_PLAN_TB AS D, PG_TB AS P WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW())) AS B
			union ALL
			
			SELECT C.SYS_GB as sysGb, SYS_NM as sysNm, ROUND((IFNULL((cntB/cntA),0)*100),1) AS rate
						 FROM 
							(SELECT A.SYS_GB, A.SYS_NM, IFNULL(TOT_CNT,0)AS cntA FROM
								(SELECT CODE AS SYS_GB, CODE_NM AS SYS_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID = 'SYSGB') AS A
								LEFT OUTER JOIN
								(SELECT SYS_GB,COUNT(*)AS TOT_CNT FROM PG_TB AS P WHERE USE_YN='Y' GROUP BY SYS_GB)AS B
								ON B.SYS_GB = A.SYS_GB
							GROUP BY SYS_GB)AS C
						LEFT OUTER JOIN
							(SELECT P.SYS_GB,COUNT(*) CNTB FROM DEV_PLAN_TB AS D, PG_TB AS P
								WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW())GROUP BY SYS_GB)AS D
						ON C.SYS_GB = D.SYS_GB
	    ]]>
	</select>
	
	<select id="DevPlanDAO.selectSysByStats" resultClass="java.util.HashMap">
	    <![CDATA[
	    	SELECT A.CODE AS sysGb, A.CODE_NM AS sysNm, IFNULL(B.ACHIEVECNT,0) AS achieveCnt, IFNULL(B.SYSALL,0) AS sysAll
			FROM LETTCCMMNDETAILCODE AS A INNER JOIN
				(SELECT SYS_GB, COUNT(CASE WHEN D.ACHIEVEMENT_RATE=100 THEN 1 END) AS ACHIEVECNT, COUNT(P.SYS_GB) AS SYSALL
				FROM DEV_PLAN_TB AS D, PG_TB AS P
				WHERE D.PG_ID = P.PG_ID AND P.USE_YN = 'Y'
				GROUP BY SYS_GB
			) AS B ON A.CODE=B.SYS_GB
			WHERE A.CODE_ID = 'SYSGB'
			ORDER BY sysAll DESC
	    ]]>
	</select>
   	
   	<select id="DevPlanDAO.selectUserWeekStats" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
			<![CDATA[
			SELECT USER_NM AS userDevNm 
				,IFNULL((COUNT(CASE WHEN WP=#dt# THEN 1 END)),0) AS '$dt$'
				 ,IFNULL ((COUNT(CASE WHEN WD=#dt# THEN 1 END)),0) AS 'b$dt$'
				,IFNULL ((COUNT(CASE WHEN WD=#dt# THEN 1 END)),0) - IFNULL ((COUNT(CASE WHEN WP=#dt# THEN 1 END)),0) as 'sub$dt$'
				FROM
			(SELECT EMPLYR_ID, USER_NM FROM LETTNEMPLYRINFO WHERE ESNTL_ID='USRCNFRM_00000000002' OR ESNTL_ID='USRCNFRM_00000000001')AS A
			LEFT OUTER JOIN
			(SELECT USER_DEV_ID, WEEKOFYEAR(PLAN_END_DT) AS WP, WEEKOFYEAR(DEV_END_DT) AS WD
				FROM DEV_PLAN_TB D, PG_TB P
				WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y') AS B
			ON A.EMPLYR_ID = B.USER_DEV_ID
			GROUP BY USER_NM
			ORDER BY USER_NM
         ]]>
   	</select>
   	
	<select id="DevPlanDAO.selectPeriodWeek" resultClass="java.lang.String">
			<![CDATA[
			SELECT DISTINCT WEEKOFYEAR(dates) AS W 
				from PERIOD
		]]>
   	</select>
   	
	<select id="DevPlanDAO.selectPeriodMonthWeek" resultClass="java.lang.String">
			<![CDATA[
			SELECT CONCAT(MD, "월", MW,"주") AS ST FROM
			(
				SELECT DISTINCT 
						MONTH(DATES) AS MD,
						WEEK(DATES,5) - WEEK(DATE_SUB(DATES,INTERVAL DAYOFMONTH(DATES)-1 DAY),5) + 1 AS MW,
						WEEKOFYEAR(DATES) AS W
				FROM PERIOD GROUP BY W) A
		]]>
   	</select>
   	
   	<select id="DevPlanDAO.selectTaskWeekStats" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
			<![CDATA[
				SELECT IFNULL(W.sysGbNm,"합계")AS sysGbNm
						,IFNULL(W.taskGbNm,"소계")AS taskGbNm
						,IFNULL(SUM(a),NULL) AS '$dt$'
						,IFNULL(SUM(b),NULL) AS 'b$dt$'
						,IFNULL(SUM(c),NULL) AS 'sub$dt$'
					from
				(
					SELECT C.SYS_GB AS sysGb,IFNULL(C.SYS_NM, (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID="SYSGB" AND CODE = C.SYS_GB)) AS sysGbNm
						,C.TASK_GB AS taskGb,IFNULL(C.TASK_NM, (SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID="TASKGB" AND CODE = C.TASK_GB)) AS taskGbNm
						 ,IFNULL((COUNT(CASE WHEN WP=#dt# THEN 1 END)),0) AS a
						 ,IFNULL ((COUNT(CASE WHEN WD=#dt# THEN 1 END)),0) AS b
						,IFNULL ((COUNT(CASE WHEN WD=#dt# THEN 1 END)),0) - IFNULL ((COUNT(CASE WHEN WP=#dt# THEN 1 END)),0) as c
						 FROM
					(SELECT SYS_GB, SYS_NM, TASK_GB, TASK_NM FROM 
						(SELECT CODE AS SYS_GB, CODE_NM AS SYS_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID = 'SYSGB')AS A
					INNER JOIN
						(SELECT CODE AS TASK_GB, CODE_NM AS TASK_NM, PARENT FROM LETTCCMMNDETAILCODE) AS B 
					ON A.SYS_GB = B.PARENT) AS C
					LEFT OUTER JOIN
					
					(SELECT SYS_GB, TASK_GB, WEEKOFYEAR(PLAN_END_DT) AS WP, WEEKOFYEAR(DEV_END_DT) AS WD
						FROM DEV_PLAN_TB D, PG_TB P
						WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y') AS D
					ON C.SYS_GB = D.SYS_GB AND C.TASK_GB = D.TASK_GB
					GROUP BY C.SYS_GB, C.TASK_GB
					ORDER BY C.SYS_GB, C.TASK_GB)AS W
					GROUP BY W.sysGbNm, W.taskGbNm WITH ROLLUP
         ]]>
   	</select>
   	
	<select id="DevPlanDAO.selectSysGbCnt" resultClass="java.lang.Integer">
			<![CDATA[
				SELECT COUNT(DISTINCT PARENT) AS sysCnt FROM LETTCCMMNDETAILCODE WHERE CODE_ID = 'TASKGB';
		]]>
   	</select>
   	
	<select id="DevPlanDAO.selectTaskGbList" resultClass="java.lang.String">
			<![CDATA[
				SELECT CODE FROM LETTCCMMNDETAILCODE 
					WHERE CODE_ID = "TASKGB"
		]]>
   	</select>
   	
   	<select id="DevPlanDAO.selectTotalByProgressRate" resultClass="java.util.HashMap">
   		<![CDATA[
   		SELECT cntA, cntB, ROUND((IFNULL((cntB/cntA),0)*100),1) AS rate
			FROM
			(SELECT COUNT(*)AS cntA FROM PG_TB WHERE USE_YN ='Y')AS A,
			(SELECT COUNT(*) cntB FROM DEV_PLAN_TB AS D, PG_TB AS P WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW())) AS B
   		 ]]>
   	</select>
   	
   	<select id="DevPlanDAO.selectSysByProgressRate" resultClass="egovMap">
   		<![CDATA[
			SELECT C.SYS_GB as sysGb, SYS_NM as sysNm, cntA,IFNULL(CNTB,0) AS cntB,ROUND((IFNULL((cntB/cntA),0)*100),1) AS rate
			 FROM 
				(SELECT A.SYS_GB, A.SYS_NM, IFNULL(TOT_CNT,0)AS cntA FROM
					(SELECT CODE AS SYS_GB, CODE_NM AS SYS_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID = 'SYSGB') AS A
					LEFT OUTER JOIN
					(SELECT SYS_GB,COUNT(*)AS TOT_CNT FROM PG_TB AS P WHERE USE_YN='Y' GROUP BY SYS_GB)AS B
					ON B.SYS_GB = A.SYS_GB
				GROUP BY SYS_GB)AS C
			LEFT OUTER JOIN
				(SELECT P.SYS_GB,COUNT(*) CNTB FROM DEV_PLAN_TB AS D, PG_TB AS P
					WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW())GROUP BY SYS_GB)AS D
			ON C.SYS_GB = D.SYS_GB
   		 ]]>
   	</select>
   	
   	<select id="DevPlanDAO.selectTaskTotalProgressRate" resultClass="egovMap">
			<![CDATA[
				SELECT SYS_GB as sysGb, SYS_NM as sysNm, C.TASK_GB as taskGb, TASK_NM as taskNm, TOT_CNT AS cntA, IFNULL(cntB,0)AS cntB, ROUND((IFNULL((cntB/TOT_CNT),0)*100),1) AS rate FROM
					(SELECT SYS_GB,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = SYS_GB) AS SYS_NM, TASK_GB, CODE_NM AS TASK_NM, TOT_CNT FROM
					(SELECT SYS_GB, TASK_GB,COUNT(*) AS TOT_CNT, PG_ID FROM PG_TB WHERE USE_YN='Y' GROUP BY TASK_GB) AS A
					INNER JOIN
					(SELECT CODE, CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID='TASKGB') AS B
					ON TASK_GB = CODE) AS C
					LEFT OUTER JOIN
					(SELECT COUNT(*) AS cntB, TASK_GB FROM DEV_PLAN_TB AS D, PG_TB AS P WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW()) GROUP BY TASK_GB)AS D
				ON D.TASK_GB = C.TASK_GB
				ORDER BY rate DESC;
         ]]>
   	</select>
   	
   	<select id="DevPlanDAO.selectTaskByProgressRate" resultClass="egovMap" parameterClass="java.lang.String">
			<![CDATA[
				SELECT C.SYS_GB AS sysGb, C.SYS_NM AS sysNm, C.TASK_GB AS taskGb, C.TASK_NM AS taskNm, IFNULL(CNTA,0) AS cntA, IFNULL(CNTB,0) AS cntB, ROUND((IFNULL((CNTB/CNTA),0)*100),1) AS rate FROM
					(SELECT A.SYS_GB, A.SYS_NM, A.TASK_GB, A.TASK_NM, CNTA FROM
					(SELECT CODE AS TASK_GB, CODE_NM AS TASK_NM, PARENT AS SYS_GB,(SELECT CODE_NM FROM LETTCCMMNDETAILCODE WHERE CODE = #sysGb#)AS SYS_NM
						FROM LETTCCMMNDETAILCODE 
						WHERE PARENT = #sysGb#)AS A
					LEFT OUTER JOIN
					(SELECT COUNT(*) CNTA, TASK_GB, SYS_GB FROM PG_TB WHERE USE_YN='Y' GROUP BY TASK_GB, SYS_GB) AS B
					ON A.TASK_GB = B.TASK_GB AND A.SYS_GB = B.SYS_GB)AS C
				LEFT OUTER JOIN 
				(SELECT COUNT(*) CNTB, TASK_GB, SYS_GB FROM DEV_PLAN_TB AS D, PG_TB AS P WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y' AND WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW())
					GROUP BY TASK_GB, SYS_GB) AS D
				ON C.SYS_GB = D.SYS_GB AND C.TASK_GB = D.TASK_GB
				ORDER BY rate DESC;
         ]]>
   	</select>
   	
	<select id="DevPlanDAO.selectStatsTable" resultClass="egovMap" >
			<![CDATA[
				SELECT
					IFNULL(W.SYS_NM,"합계")AS SYS_NM
					,IFNULL(W.TASK_NM,"소계")AS TASK_NM
					,IFNULL(SUM(TOT_CNT),NULL) AS TOT_CNT
					,IFNULL(SUM(TP),NULL) AS TP
					,IFNULL(SUM(TD),NULL) AS TD
					,IFNULL(ROUND((IFNULL((SUM(TD)/SUM(TP)),0)*100),1),NULL) AS TR
					,IFNULL(SUM(AP),NULL) AS AP
					,IFNULL(SUM(AD),NULL) AS AD
					,IFNULL(ROUND((IFNULL((SUM(AD)/SUM(AP)),0)*100),1),NULL) AS AR
					,IFNULL(SUM(TOT_D),NULL) AS TOT_D
					,IFNULL(ROUND((IFNULL((SUM(TOT_D)/SUM(TOT_CNT)),0)*100),1),NULL) AS TOT
				FROM
					(SELECT * 
							,ROUND((IFNULL((TOT_D/TOT_CNT),0)*100),1) AS TOT
						FROM 
							(SELECT 
								SYS_NM ,TASK_NM, F.SYS_GB, F.TASK_GB
								,IFNULL(TOT_CNT,0) AS TOT_CNT
								,IFNULL(TP,0) AS TP, IFNULL(TD,0) AS TD, IFNULL(TR,0) AS TR
								,IFNULL(AP,0) AS AP, IFNULL(AD,0) AS AD, IFNULL(AR,0) AS AR
								,IFNULL(AD,0) AS TOT_D
								FROM
									(SELECT C.SYS_GB, SYS_NM, C.TASK_GB, TASK_NM, IFNULL(TOT_CNT,0) AS TOT_CNT
											FROM
										(SELECT * 
											FROM 
												(SELECT CODE AS SYS_GB, CODE_NM AS SYS_NM FROM LETTCCMMNDETAILCODE WHERE CODE_ID = 'SYSGB')AS A
											INNER JOIN
												(SELECT CODE AS TASK_GB, CODE_NM AS TASK_NM, PARENT FROM LETTCCMMNDETAILCODE) AS B 
											ON A.SYS_GB = B.PARENT
										)AS C
										LEFT OUTER JOIN
										(SELECT TASK_GB,COUNT(*) AS TOT_CNT, PG_ID FROM PG_TB WHERE USE_YN='Y' GROUP BY TASK_GB)AS PG_TB
										ON C.TASK_GB = PG_TB.TASK_GB
									) AS F	
									
									LEFT JOIN
									(SELECT *, ROUND((IFNULL((TD/TP),0)*100),1) AS TR, ROUND((IFNULL((AD/AP),0)*100),1) AS AR
										 	FROM
												(SELECT SYS_GB, TASK_GB
													,COUNT(IF( WEEKOFYEAR(D.PLAN_END_DT)=WEEKOFYEAR(NOW()),1,NULL)) AS TP
													,COUNT(IF( WEEKOFYEAR(D.DEV_END_DT)=WEEKOFYEAR(NOW()),1,NULL)) AS TD
													,COUNT(IF( WEEKOFYEAR(D.PLAN_END_DT) <= WEEKOFYEAR(NOW()),1,NULL)) AS AP
													,COUNT(IF( WEEKOFYEAR(D.DEV_END_DT) <= WEEKOFYEAR(NOW()),1,NULL)) AS AD
													FROM DEV_PLAN_TB D, PG_TB P
													WHERE D.PG_ID = P.PG_ID AND P.USE_YN='Y'
													GROUP BY SYS_GB, TASK_GB
													)AS Z) AS G
									ON G.TASK_GB = F.TASK_GB
							)AS X
						)AS W
						GROUP BY W.SYS_NM, W.TASK_NM WITH ROLLUP
         ]]>
   	</select>
   	
	
	
</sqlMap>
